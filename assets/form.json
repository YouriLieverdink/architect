{
  "service": {
    "apidoc": {
      "version": "0.15.4"
    },
    "name": "delta",
    "organization": {
      "key": "flow"
    },
    "application": {
      "key": "delta"
    },
    "namespace": "io.flow.delta.v0",
    "version": "0.8.36",
    "info": {},
    "headers": [],
    "imports": [
      {
        "uri": "https://app.apibuilder.io/flow/common/0.0.12/service.json",
        "namespace": "io.flow.common.v0",
        "organization": {
          "key": "flow"
        },
        "application": {
          "key": "common"
        },
        "version": "0.0.12",
        "enums": [
          "calendar",
          "capability",
          "change_type",
          "dimension_type",
          "exception_type",
          "holiday_calendar",
          "schedule_exception_status",
          "sort_direction",
          "unit_of_measurement",
          "unit_of_time",
          "value_added_service",
          "visibility"
        ],
        "interfaces": [],
        "unions": [
          "expandable_location",
          "expandable_organization",
          "expandable_user"
        ],
        "models": [
          "contact",
          "datetime_range",
          "dimension",
          "error",
          "exception",
          "experience_summary",
          "healthcheck",
          "location",
          "location_reference",
          "measurement",
          "name",
          "organization",
          "organization_reference",
          "organization_summary",
          "schedule",
          "user",
          "user_reference",
          "user_summary"
        ],
        "annotations": []
      },
      {
        "uri": "https://app.apibuilder.io/flow/delta-config/latest/service.json",
        "namespace": "io.flow.delta.config.v0",
        "organization": {
          "key": "flow"
        },
        "application": {
          "key": "delta-config"
        },
        "version": "0.8.36",
        "enums": ["build_stage", "cluster", "instance_type", "project_stage"],
        "interfaces": [],
        "unions": ["build_config", "config"],
        "models": [
          "branch",
          "config_error",
          "config_project",
          "ecs_build_config",
          "k8s_build_config"
        ],
        "annotations": []
      },
      {
        "uri": "https://app.apibuilder.io/flow/error/latest/service.json",
        "namespace": "io.flow.error.v0",
        "organization": {
          "key": "flow"
        },
        "application": {
          "key": "error"
        },
        "version": "0.9.4",
        "enums": ["generic_error_code"],
        "interfaces": [],
        "unions": [],
        "models": ["generic_error"],
        "annotations": []
      },
      {
        "uri": "https://app.apibuilder.io/flow/github/0.0.3/service.json",
        "namespace": "io.flow.github.v0",
        "organization": {
          "key": "flow"
        },
        "application": {
          "key": "github"
        },
        "version": "0.0.3",
        "enums": [
          "contents_type",
          "encoding",
          "hook_event",
          "node_type",
          "owner_type",
          "visibility"
        ],
        "interfaces": [],
        "unions": [],
        "models": [
          "blob",
          "blob_created",
          "blob_form",
          "commit",
          "commit_form",
          "commit_response",
          "commit_summary",
          "contents",
          "create_tree_form",
          "create_tree_response",
          "error",
          "github_object",
          "hook",
          "hook_config",
          "node",
          "node_form",
          "person",
          "pull_request",
          "pull_request_form",
          "ref",
          "ref_form",
          "ref_update_form",
          "repository",
          "tag",
          "tag_form",
          "tag_summary",
          "tagger",
          "tree",
          "tree_form",
          "tree_result",
          "tree_summary",
          "unprocessable_entity",
          "user",
          "user_email"
        ],
        "annotations": []
      }
    ],
    "enums": [
      {
        "name": "docker_provider",
        "plural": "docker_providers",
        "values": [
          {
            "name": "docker_hub",
            "attributes": []
          }
        ],
        "attributes": []
      },
      {
        "name": "event_type",
        "plural": "event_types",
        "values": [
          {
            "name": "change",
            "attributes": [],
            "description": "Indicates this event actually reported a successful change was completed in the project"
          },
          {
            "name": "info",
            "attributes": [],
            "description": "Indicates this was an informational event only"
          }
        ],
        "attributes": []
      },
      {
        "name": "publication",
        "plural": "publications",
        "values": [
          {
            "name": "deployments",
            "attributes": [],
            "description": "Get notified of all deployments"
          }
        ],
        "attributes": [],
        "description": "A publication represents something that a user can subscribe to."
      },
      {
        "name": "role",
        "plural": "roles",
        "values": [
          {
            "name": "member",
            "attributes": []
          },
          {
            "name": "admin",
            "attributes": []
          }
        ],
        "attributes": []
      },
      {
        "name": "scms",
        "plural": "scmses",
        "values": [
          {
            "name": "github",
            "attributes": []
          }
        ],
        "attributes": []
      },
      {
        "name": "status",
        "plural": "statuses",
        "values": [
          {
            "name": "enabled",
            "attributes": []
          },
          {
            "name": "paused",
            "attributes": []
          }
        ],
        "attributes": []
      },
      {
        "name": "visibility",
        "plural": "visibilities",
        "values": [
          {
            "name": "public",
            "attributes": []
          },
          {
            "name": "private",
            "attributes": []
          }
        ],
        "attributes": []
      }
    ],
    "interfaces": [],
    "unions": [
      {
        "name": "item_summary",
        "plural": "item_summaries",
        "types": [
          {
            "type": "project_summary",
            "attributes": [],
            "discriminator_value": "project_summary"
          }
        ],
        "attributes": [],
        "interfaces": [],
        "discriminator": "discriminator"
      }
    ],
    "models": [
      {
        "name": "aws_actor",
        "plural": "aws_actors",
        "fields": [
          {
            "name": "id",
            "type": "long",
            "required": true,
            "attributes": [],
            "annotations": []
          }
        ],
        "attributes": [],
        "interfaces": [],
        "description": "Defines an aws actor"
      },
      {
        "name": "build",
        "plural": "builds",
        "fields": [
          {
            "name": "id",
            "type": "string",
            "required": true,
            "attributes": [],
            "annotations": []
          },
          {
            "name": "project",
            "type": "project_summary",
            "required": true,
            "attributes": [],
            "annotations": []
          },
          {
            "name": "status",
            "type": "status",
            "required": true,
            "attributes": [],
            "annotations": []
          },
          {
            "name": "name",
            "type": "string",
            "required": true,
            "attributes": [],
            "annotations": [],
            "description": "This is the full name of the application that this build represents and is used to lookup information in the registry, in docker hub, in AWS, etc.",
            "example": "delta-api"
          }
        ],
        "attributes": [],
        "interfaces": [],
        "description": "A build provides information abuot a dockerfile and the name of the build in the registry."
      },
      {
        "name": "build_state",
        "plural": "build_states",
        "fields": [
          {
            "name": "name",
            "type": "string",
            "required": true,
            "attributes": [],
            "annotations": [],
            "description": "The build name"
          },
          {
            "name": "desired",
            "type": "state",
            "required": false,
            "attributes": [],
            "annotations": []
          },
          {
            "name": "last",
            "type": "state",
            "required": false,
            "attributes": [],
            "annotations": []
          },
          {
            "name": "latest_image",
            "type": "string",
            "required": false,
            "attributes": [],
            "annotations": [],
            "description": "If available, the full name of the latest image for this build"
          }
        ],
        "attributes": [],
        "interfaces": [],
        "description": "Describes the last and desired states of a build"
      },
      {
        "name": "dashboard_build",
        "plural": "dashboard_builds",
        "fields": [
          {
            "name": "id",
            "type": "string",
            "required": true,
            "attributes": [],
            "annotations": [],
            "description": "The build id"
          },
          {
            "name": "project",
            "type": "project_summary",
            "required": true,
            "attributes": [],
            "annotations": []
          },
          {
            "name": "name",
            "type": "string",
            "required": true,
            "attributes": [],
            "annotations": [],
            "description": "The build name"
          },
          {
            "name": "cluster",
            "type": "io.flow.delta.config.v0.enums.cluster",
            "required": true,
            "attributes": [],
            "annotations": []
          },
          {
            "name": "desired",
            "type": "state",
            "required": true,
            "attributes": [],
            "annotations": []
          },
          {
            "name": "last",
            "type": "state",
            "required": true,
            "attributes": [],
            "annotations": []
          }
        ],
        "attributes": [],
        "interfaces": [],
        "description": "Summary of each build for the purposes of displaying on a dashboard"
      },
      {
        "name": "docker",
        "plural": "dockers",
        "fields": [
          {
            "name": "provider",
            "type": "docker_provider",
            "required": true,
            "attributes": [],
            "annotations": []
          },
          {
            "name": "organization",
            "type": "string",
            "required": true,
            "attributes": [],
            "annotations": [],
            "example": "flowcommerce"
          }
        ],
        "attributes": [],
        "interfaces": []
      },
      {
        "name": "ecs_ami_region_image",
        "plural": "ecs_ami_region_images",
        "fields": [
          {
            "name": "Name",
            "type": "string",
            "required": true,
            "attributes": [],
            "annotations": []
          },
          {
            "name": "ImageId",
            "type": "string",
            "required": true,
            "attributes": [],
            "annotations": []
          }
        ],
        "attributes": [],
        "interfaces": []
      },
      {
        "name": "ecs_ami_regions",
        "plural": "ecs_ami_regionses",
        "fields": [
          {
            "name": "us-east-1",
            "type": "ecs_ami_region_image",
            "required": true,
            "attributes": [],
            "annotations": []
          }
        ],
        "attributes": [],
        "interfaces": []
      },
      {
        "name": "ecs_amis",
        "plural": "ecs_amises",
        "fields": [
          {
            "name": "Regions",
            "type": "ecs_ami_regions",
            "required": true,
            "attributes": [],
            "annotations": []
          }
        ],
        "attributes": [],
        "interfaces": []
      },
      {
        "name": "event",
        "plural": "events",
        "fields": [
          {
            "name": "id",
            "type": "string",
            "required": true,
            "attributes": [],
            "annotations": []
          },
          {
            "name": "created_at",
            "type": "date-time-iso8601",
            "required": true,
            "attributes": [],
            "annotations": []
          },
          {
            "name": "project",
            "type": "project_summary",
            "required": true,
            "attributes": [],
            "annotations": []
          },
          {
            "name": "type",
            "type": "event_type",
            "required": true,
            "attributes": [],
            "annotations": []
          },
          {
            "name": "summary",
            "type": "string",
            "required": true,
            "attributes": [],
            "annotations": []
          },
          {
            "name": "error",
            "type": "string",
            "required": false,
            "attributes": [],
            "annotations": []
          }
        ],
        "attributes": [],
        "interfaces": []
      },
      {
        "name": "github_authentication_form",
        "plural": "github_authentication_forms",
        "fields": [
          {
            "name": "code",
            "type": "string",
            "required": true,
            "attributes": [],
            "annotations": []
          }
        ],
        "attributes": [],
        "interfaces": [],
        "description": "Used to authenticate user based on the oauth code we receive from github"
      },
      {
        "name": "github_user",
        "plural": "github_users",
        "fields": [
          {
            "name": "id",
            "type": "string",
            "required": true,
            "attributes": [],
            "annotations": []
          },
          {
            "name": "user",
            "type": "reference",
            "required": true,
            "attributes": [],
            "annotations": []
          },
          {
            "name": "github_user_id",
            "type": "long",
            "required": true,
            "attributes": [],
            "annotations": []
          },
          {
            "name": "login",
            "type": "string",
            "required": true,
            "attributes": [],
            "annotations": []
          }
        ],
        "attributes": [],
        "interfaces": []
      },
      {
        "name": "github_user_form",
        "plural": "github_user_forms",
        "fields": [
          {
            "name": "user_id",
            "type": "string",
            "required": true,
            "attributes": [],
            "annotations": []
          },
          {
            "name": "github_user_id",
            "type": "long",
            "required": true,
            "attributes": [],
            "annotations": []
          },
          {
            "name": "login",
            "type": "string",
            "required": true,
            "attributes": [],
            "annotations": []
          }
        ],
        "attributes": [],
        "interfaces": []
      },
      {
        "name": "github_webhook",
        "plural": "github_webhooks",
        "fields": [
          {
            "name": "id",
            "type": "long",
            "required": true,
            "attributes": [],
            "annotations": []
          }
        ],
        "attributes": [],
        "interfaces": [],
        "description": "Defines a github hook"
      },
      {
        "name": "image",
        "plural": "images",
        "fields": [
          {
            "name": "id",
            "type": "string",
            "required": true,
            "attributes": [],
            "annotations": []
          },
          {
            "name": "build",
            "type": "build",
            "required": true,
            "attributes": [],
            "annotations": []
          },
          {
            "name": "name",
            "type": "string",
            "required": true,
            "attributes": [],
            "annotations": []
          },
          {
            "name": "version",
            "type": "string",
            "required": true,
            "attributes": [],
            "annotations": []
          }
        ],
        "attributes": [],
        "interfaces": []
      },
      {
        "name": "image_form",
        "plural": "image_forms",
        "fields": [
          {
            "name": "build_id",
            "type": "string",
            "required": true,
            "attributes": [],
            "annotations": []
          },
          {
            "name": "name",
            "type": "string",
            "required": true,
            "attributes": [],
            "annotations": []
          },
          {
            "name": "version",
            "type": "string",
            "required": true,
            "attributes": [],
            "annotations": []
          }
        ],
        "attributes": [],
        "interfaces": []
      },
      {
        "name": "item",
        "plural": "items",
        "fields": [
          {
            "name": "id",
            "type": "string",
            "required": true,
            "attributes": [],
            "annotations": [],
            "description": "Unique identifier for this item."
          },
          {
            "name": "organization",
            "type": "organization_summary",
            "required": true,
            "attributes": [],
            "annotations": []
          },
          {
            "name": "visibility",
            "type": "visibility",
            "required": true,
            "attributes": [],
            "annotations": []
          },
          {
            "name": "summary",
            "type": "item_summary",
            "required": true,
            "attributes": [],
            "annotations": []
          },
          {
            "name": "label",
            "type": "string",
            "required": true,
            "attributes": [],
            "annotations": []
          },
          {
            "name": "description",
            "type": "string",
            "required": false,
            "attributes": [],
            "annotations": []
          }
        ],
        "attributes": [],
        "interfaces": [],
        "description": "A denormalization of item content for search"
      },
      {
        "name": "membership",
        "plural": "memberships",
        "fields": [
          {
            "name": "id",
            "type": "string",
            "required": true,
            "attributes": [],
            "annotations": [],
            "description": "Unique identifier for this membership"
          },
          {
            "name": "user",
            "type": "user_summary",
            "required": true,
            "attributes": [],
            "annotations": []
          },
          {
            "name": "organization",
            "type": "organization_summary",
            "required": true,
            "attributes": [],
            "annotations": []
          },
          {
            "name": "role",
            "type": "role",
            "required": true,
            "attributes": [],
            "annotations": []
          }
        ],
        "attributes": [],
        "interfaces": [],
        "description": "A user can belong to one or more organizations via memberships."
      },
      {
        "name": "membership_form",
        "plural": "membership_forms",
        "fields": [
          {
            "name": "user_id",
            "type": "string",
            "required": true,
            "attributes": [],
            "annotations": []
          },
          {
            "name": "organization",
            "type": "string",
            "required": true,
            "attributes": [],
            "annotations": []
          },
          {
            "name": "role",
            "type": "role",
            "required": true,
            "attributes": [],
            "annotations": [],
            "default": "member"
          }
        ],
        "attributes": [],
        "interfaces": []
      },
      {
        "name": "organization",
        "plural": "organizations",
        "fields": [
          {
            "name": "id",
            "type": "string",
            "required": true,
            "attributes": [],
            "annotations": []
          },
          {
            "name": "user",
            "type": "user_summary",
            "required": true,
            "attributes": [],
            "annotations": [],
            "description": "The user that created this organization"
          },
          {
            "name": "docker",
            "type": "docker",
            "required": true,
            "attributes": [],
            "annotations": [],
            "description": "Required information to locate docker images for projects associated with this organization."
          },
          {
            "name": "travis",
            "type": "travis",
            "required": true,
            "attributes": [],
            "annotations": []
          }
        ],
        "attributes": [],
        "interfaces": []
      },
      {
        "name": "organization_form",
        "plural": "organization_forms",
        "fields": [
          {
            "name": "id",
            "type": "string",
            "required": true,
            "attributes": [],
            "annotations": []
          },
          {
            "name": "docker",
            "type": "docker",
            "required": true,
            "attributes": [],
            "annotations": []
          },
          {
            "name": "travis",
            "type": "travis",
            "required": true,
            "attributes": [],
            "annotations": []
          }
        ],
        "attributes": [],
        "interfaces": []
      },
      {
        "name": "organization_summary",
        "plural": "organization_summaries",
        "fields": [
          {
            "name": "id",
            "type": "string",
            "required": true,
            "attributes": [],
            "annotations": []
          }
        ],
        "attributes": [],
        "interfaces": []
      },
      {
        "name": "project",
        "plural": "projects",
        "fields": [
          {
            "name": "id",
            "type": "string",
            "required": true,
            "attributes": [],
            "annotations": []
          },
          {
            "name": "organization",
            "type": "organization_summary",
            "required": true,
            "attributes": [],
            "annotations": []
          },
          {
            "name": "user",
            "type": "reference",
            "required": true,
            "attributes": [],
            "annotations": [],
            "description": "The user that created this project"
          },
          {
            "name": "visibility",
            "type": "visibility",
            "required": true,
            "attributes": [],
            "annotations": []
          },
          {
            "name": "scms",
            "type": "scms",
            "required": true,
            "attributes": [],
            "annotations": []
          },
          {
            "name": "name",
            "type": "string",
            "required": true,
            "attributes": [],
            "annotations": []
          },
          {
            "name": "uri",
            "type": "string",
            "required": true,
            "attributes": [],
            "annotations": []
          },
          {
            "name": "config",
            "type": "io.flow.delta.config.v0.unions.config",
            "required": true,
            "attributes": [],
            "annotations": []
          }
        ],
        "attributes": [],
        "interfaces": []
      },
      {
        "name": "project_form",
        "plural": "project_forms",
        "fields": [
          {
            "name": "organization",
            "type": "string",
            "required": true,
            "attributes": [],
            "annotations": []
          },
          {
            "name": "name",
            "type": "string",
            "required": true,
            "attributes": [],
            "annotations": []
          },
          {
            "name": "visibility",
            "type": "visibility",
            "required": true,
            "attributes": [],
            "annotations": []
          },
          {
            "name": "scms",
            "type": "scms",
            "required": true,
            "attributes": [],
            "annotations": []
          },
          {
            "name": "uri",
            "type": "string",
            "required": true,
            "attributes": [],
            "annotations": []
          },
          {
            "name": "config",
            "type": "io.flow.delta.config.v0.models.config_project",
            "required": false,
            "attributes": [],
            "annotations": [],
            "description": "Project configuration. If not provided, we use the global default"
          }
        ],
        "attributes": [],
        "interfaces": []
      },
      {
        "name": "project_summary",
        "plural": "project_summaries",
        "fields": [
          {
            "name": "id",
            "type": "string",
            "required": true,
            "attributes": [],
            "annotations": []
          },
          {
            "name": "organization",
            "type": "organization_summary",
            "required": true,
            "attributes": [],
            "annotations": []
          },
          {
            "name": "name",
            "type": "string",
            "required": true,
            "attributes": [],
            "annotations": []
          },
          {
            "name": "uri",
            "type": "string",
            "required": true,
            "attributes": [],
            "annotations": []
          }
        ],
        "attributes": [],
        "interfaces": []
      },
      {
        "name": "reference",
        "plural": "references",
        "fields": [
          {
            "name": "id",
            "type": "string",
            "required": true,
            "attributes": [],
            "annotations": []
          }
        ],
        "attributes": [],
        "interfaces": []
      },
      {
        "name": "repository",
        "plural": "repositories",
        "fields": [
          {
            "name": "name",
            "type": "string",
            "required": true,
            "attributes": [],
            "annotations": []
          },
          {
            "name": "visibility",
            "type": "visibility",
            "required": true,
            "attributes": [],
            "annotations": []
          },
          {
            "name": "uri",
            "type": "string",
            "required": true,
            "attributes": [],
            "annotations": []
          }
        ],
        "attributes": [],
        "interfaces": []
      },
      {
        "name": "sha",
        "plural": "shas",
        "fields": [
          {
            "name": "id",
            "type": "string",
            "required": true,
            "attributes": [],
            "annotations": []
          },
          {
            "name": "project",
            "type": "project_summary",
            "required": true,
            "attributes": [],
            "annotations": []
          },
          {
            "name": "created_at",
            "type": "date-time-iso8601",
            "required": true,
            "attributes": [],
            "annotations": []
          },
          {
            "name": "branch",
            "type": "string",
            "required": true,
            "attributes": [],
            "annotations": []
          },
          {
            "name": "hash",
            "type": "string",
            "required": true,
            "attributes": [],
            "annotations": []
          }
        ],
        "attributes": [],
        "interfaces": []
      },
      {
        "name": "sns_message_ami",
        "plural": "sns_message_amis",
        "fields": [
          {
            "name": "ECSAmis",
            "type": "[ecs_amis]",
            "required": true,
            "attributes": [],
            "annotations": []
          }
        ],
        "attributes": [],
        "interfaces": []
      },
      {
        "name": "state",
        "plural": "states",
        "fields": [
          {
            "name": "timestamp",
            "type": "date-time-iso8601",
            "required": true,
            "attributes": [],
            "annotations": [],
            "example": "Date / time that this state was captured"
          },
          {
            "name": "versions",
            "type": "[version]",
            "required": true,
            "attributes": [],
            "annotations": []
          }
        ],
        "attributes": [],
        "interfaces": [],
        "description": "Used to describe the last state of a project in AWS. Specifically which versions are running"
      },
      {
        "name": "state_form",
        "plural": "state_forms",
        "fields": [
          {
            "name": "versions",
            "type": "[version]",
            "required": true,
            "attributes": [],
            "annotations": []
          }
        ],
        "attributes": [],
        "interfaces": []
      },
      {
        "name": "subscription",
        "plural": "subscriptions",
        "fields": [
          {
            "name": "id",
            "type": "string",
            "required": true,
            "attributes": [],
            "annotations": [],
            "description": "Internal unique identifier for this subscription record"
          },
          {
            "name": "user",
            "type": "reference",
            "required": true,
            "attributes": [],
            "annotations": []
          },
          {
            "name": "publication",
            "type": "publication",
            "required": true,
            "attributes": [],
            "annotations": []
          }
        ],
        "attributes": [],
        "interfaces": [],
        "description": "Represents a user that is currently subscribed to a publication"
      },
      {
        "name": "subscription_form",
        "plural": "subscription_forms",
        "fields": [
          {
            "name": "user_id",
            "type": "string",
            "required": true,
            "attributes": [],
            "annotations": []
          },
          {
            "name": "publication",
            "type": "publication",
            "required": true,
            "attributes": [],
            "annotations": []
          }
        ],
        "attributes": [],
        "interfaces": []
      },
      {
        "name": "tag",
        "plural": "tags",
        "fields": [
          {
            "name": "id",
            "type": "string",
            "required": true,
            "attributes": [],
            "annotations": []
          },
          {
            "name": "project",
            "type": "project_summary",
            "required": true,
            "attributes": [],
            "annotations": []
          },
          {
            "name": "created_at",
            "type": "date-time-iso8601",
            "required": true,
            "attributes": [],
            "annotations": []
          },
          {
            "name": "name",
            "type": "string",
            "required": true,
            "attributes": [],
            "annotations": []
          },
          {
            "name": "hash",
            "type": "string",
            "required": true,
            "attributes": [],
            "annotations": []
          }
        ],
        "attributes": [],
        "interfaces": []
      },
      {
        "name": "token",
        "plural": "tokens",
        "fields": [
          {
            "name": "id",
            "type": "string",
            "required": true,
            "attributes": [],
            "annotations": []
          },
          {
            "name": "user",
            "type": "reference",
            "required": true,
            "attributes": [],
            "annotations": []
          },
          {
            "name": "masked",
            "type": "string",
            "required": true,
            "attributes": [],
            "annotations": []
          },
          {
            "name": "cleartext",
            "type": "string",
            "required": false,
            "attributes": [],
            "annotations": [],
            "description": "The cleartext token. Only available when the token is initially created"
          },
          {
            "name": "description",
            "type": "string",
            "required": false,
            "attributes": [],
            "annotations": []
          }
        ],
        "attributes": [],
        "interfaces": []
      },
      {
        "name": "token_form",
        "plural": "token_forms",
        "fields": [
          {
            "name": "user_id",
            "type": "string",
            "required": true,
            "attributes": [],
            "annotations": []
          },
          {
            "name": "description",
            "type": "string",
            "required": false,
            "attributes": [],
            "annotations": []
          }
        ],
        "attributes": [],
        "interfaces": []
      },
      {
        "name": "travis",
        "plural": "travises",
        "fields": [
          {
            "name": "organization",
            "type": "string",
            "required": true,
            "attributes": [],
            "annotations": [],
            "example": "flowcommerce"
          }
        ],
        "attributes": [],
        "interfaces": []
      },
      {
        "name": "user_form",
        "plural": "user_forms",
        "fields": [
          {
            "name": "email",
            "type": "string",
            "required": false,
            "attributes": [],
            "annotations": []
          },
          {
            "name": "name",
            "type": "io.flow.common.v0.models.name",
            "required": false,
            "attributes": [],
            "annotations": []
          }
        ],
        "attributes": [],
        "interfaces": []
      },
      {
        "name": "user_identifier",
        "plural": "user_identifiers",
        "fields": [
          {
            "name": "id",
            "type": "string",
            "required": true,
            "attributes": [],
            "annotations": []
          },
          {
            "name": "user",
            "type": "reference",
            "required": true,
            "attributes": [],
            "annotations": []
          },
          {
            "name": "value",
            "type": "string",
            "required": true,
            "attributes": [],
            "annotations": []
          }
        ],
        "attributes": [],
        "interfaces": []
      },
      {
        "name": "user_summary",
        "plural": "user_summaries",
        "fields": [
          {
            "name": "id",
            "type": "string",
            "required": true,
            "attributes": [],
            "annotations": []
          },
          {
            "name": "email",
            "type": "string",
            "required": false,
            "attributes": [],
            "annotations": []
          },
          {
            "name": "name",
            "type": "io.flow.common.v0.models.name",
            "required": true,
            "attributes": [],
            "annotations": []
          }
        ],
        "attributes": [],
        "interfaces": []
      },
      {
        "name": "username_password",
        "plural": "username_passwords",
        "fields": [
          {
            "name": "username",
            "type": "string",
            "required": true,
            "attributes": [],
            "annotations": []
          },
          {
            "name": "password",
            "type": "string",
            "required": false,
            "attributes": [],
            "annotations": []
          }
        ],
        "attributes": [],
        "interfaces": []
      },
      {
        "name": "variable",
        "plural": "variables",
        "fields": [
          {
            "name": "id",
            "type": "string",
            "required": true,
            "attributes": [],
            "annotations": []
          },
          {
            "name": "organization",
            "type": "organization_summary",
            "required": true,
            "attributes": [],
            "annotations": []
          },
          {
            "name": "key",
            "type": "string",
            "required": true,
            "attributes": [],
            "annotations": []
          },
          {
            "name": "value",
            "type": "string",
            "required": true,
            "attributes": [],
            "annotations": []
          }
        ],
        "attributes": [],
        "interfaces": [],
        "description": "Configuration variable of an organization"
      },
      {
        "name": "variable_form",
        "plural": "variable_forms",
        "fields": [
          {
            "name": "organization",
            "type": "string",
            "required": true,
            "attributes": [],
            "annotations": []
          },
          {
            "name": "key",
            "type": "string",
            "required": true,
            "attributes": [],
            "annotations": []
          },
          {
            "name": "value",
            "type": "string",
            "required": true,
            "attributes": [],
            "annotations": []
          }
        ],
        "attributes": [],
        "interfaces": []
      },
      {
        "name": "version",
        "plural": "versions",
        "fields": [
          {
            "name": "name",
            "type": "string",
            "required": true,
            "attributes": [],
            "annotations": [],
            "example": "0.0.1"
          },
          {
            "name": "instances",
            "type": "long",
            "required": true,
            "attributes": [],
            "annotations": [],
            "description": "The number of instances running this version"
          }
        ],
        "attributes": [],
        "interfaces": []
      }
    ],
    "resources": [
      {
        "type": "aws_actor",
        "plural": "aws_actors",
        "operations": [
          {
            "method": "POST",
            "path": "/actors/aws/:build_id",
            "parameters": [
              {
                "name": "build_id",
                "type": "string",
                "location": "Path",
                "required": true
              }
            ],
            "responses": [
              {
                "code": {
                  "integer": {
                    "value": 204
                  }
                },
                "type": "unit",
                "attributes": []
              }
            ],
            "attributes": [],
            "description": "Trigger actor message for build id"
          }
        ],
        "attributes": [],
        "path": "/actors/aws",
        "description": "way to trigger aws configure actor message"
      },
      {
        "type": "dashboard_build",
        "plural": "dashboard_builds",
        "operations": [
          {
            "method": "GET",
            "path": "/dashboard_builds",
            "parameters": [
              {
                "name": "organization",
                "type": "string",
                "location": "Query",
                "required": false
              },
              {
                "name": "cluster",
                "type": "io.flow.delta.config.v0.enums.cluster",
                "location": "Query",
                "required": false
              },
              {
                "name": "limit",
                "type": "long",
                "location": "Query",
                "required": true,
                "description": "The number of records to return",
                "default": "25",
                "minimum": 1,
                "maximum": 100
              },
              {
                "name": "offset",
                "type": "long",
                "location": "Query",
                "required": true,
                "description": "Used to paginate. First page of results is 0.",
                "default": "0",
                "minimum": 0
              }
            ],
            "responses": [
              {
                "code": {
                  "integer": {
                    "value": 200
                  }
                },
                "type": "[dashboard_build]",
                "attributes": []
              },
              {
                "code": {
                  "integer": {
                    "value": 401
                  }
                },
                "type": "unit",
                "attributes": []
              }
            ],
            "attributes": []
          }
        ],
        "attributes": [],
        "path": "/dashboard_builds"
      },
      {
        "type": "event",
        "plural": "events",
        "operations": [
          {
            "method": "GET",
            "path": "/events",
            "parameters": [
              {
                "name": "id",
                "type": "[string]",
                "location": "Query",
                "required": false,
                "description": "Filter by any one of these ids"
              },
              {
                "name": "project_id",
                "type": "string",
                "location": "Query",
                "required": false,
                "description": "Find events for this project."
              },
              {
                "name": "type",
                "type": "event_type",
                "location": "Query",
                "required": false
              },
              {
                "name": "number_minutes_since_creation",
                "type": "long",
                "location": "Query",
                "required": false
              },
              {
                "name": "has_error",
                "type": "boolean",
                "location": "Query",
                "required": false
              },
              {
                "name": "limit",
                "type": "long",
                "location": "Query",
                "required": true,
                "description": "The number of records to return",
                "default": "25",
                "minimum": 1,
                "maximum": 100
              },
              {
                "name": "offset",
                "type": "long",
                "location": "Query",
                "required": true,
                "description": "Used to paginate. First page of results is 0.",
                "default": "0",
                "minimum": 0
              },
              {
                "name": "sort",
                "type": "string",
                "location": "Query",
                "required": true,
                "default": "-events.created_at"
              }
            ],
            "responses": [
              {
                "code": {
                  "integer": {
                    "value": 200
                  }
                },
                "type": "[event]",
                "attributes": []
              },
              {
                "code": {
                  "integer": {
                    "value": 401
                  }
                },
                "type": "unit",
                "attributes": []
              }
            ],
            "attributes": []
          },
          {
            "method": "GET",
            "path": "/events/:id",
            "parameters": [
              {
                "name": "id",
                "type": "string",
                "location": "Path",
                "required": true
              }
            ],
            "responses": [
              {
                "code": {
                  "integer": {
                    "value": 200
                  }
                },
                "type": "event",
                "attributes": []
              },
              {
                "code": {
                  "integer": {
                    "value": 401
                  }
                },
                "type": "unit",
                "attributes": []
              },
              {
                "code": {
                  "integer": {
                    "value": 404
                  }
                },
                "type": "unit",
                "attributes": []
              }
            ],
            "attributes": []
          }
        ],
        "attributes": [],
        "path": "/events"
      },
      {
        "type": "github_user",
        "plural": "github_users",
        "operations": [
          {
            "method": "POST",
            "path": "/authentications/github",
            "parameters": [],
            "responses": [
              {
                "code": {
                  "integer": {
                    "value": 200
                  }
                },
                "type": "io.flow.common.v0.models.user",
                "attributes": []
              },
              {
                "code": {
                  "integer": {
                    "value": 422
                  }
                },
                "type": "io.flow.error.v0.models.generic_error",
                "attributes": []
              }
            ],
            "attributes": [],
            "description": "Used to authenticate a user via github",
            "body": {
              "type": "github_authentication_form",
              "attributes": []
            }
          }
        ],
        "attributes": [],
        "path": "/authentications"
      },
      {
        "type": "github_webhook",
        "plural": "github_webhooks",
        "operations": [
          {
            "method": "POST",
            "path": "/webhooks/github/:project_id",
            "parameters": [
              {
                "name": "project_id",
                "type": "string",
                "location": "Path",
                "required": true
              }
            ],
            "responses": [
              {
                "code": {
                  "integer": {
                    "value": 204
                  }
                },
                "type": "unit",
                "attributes": []
              }
            ],
            "attributes": [],
            "description": "Receives a webhook on push for this particular project"
          }
        ],
        "attributes": [],
        "path": "/webhooks/github",
        "description": "The target of the github webooks"
      },
      {
        "type": "image",
        "plural": "images",
        "operations": [
          {
            "method": "GET",
            "path": "/images",
            "parameters": [
              {
                "name": "id",
                "type": "[string]",
                "location": "Query",
                "required": false,
                "description": "Filter by any one of these ids"
              },
              {
                "name": "project_id",
                "type": "string",
                "location": "Query",
                "required": false,
                "description": "Find images for this project."
              },
              {
                "name": "name",
                "type": "string",
                "location": "Query",
                "required": false,
                "description": "Find images with this name.",
                "example": "0.0.1"
              },
              {
                "name": "limit",
                "type": "long",
                "location": "Query",
                "required": true,
                "description": "The number of records to return",
                "default": "25",
                "minimum": 1,
                "maximum": 100
              },
              {
                "name": "offset",
                "type": "long",
                "location": "Query",
                "required": true,
                "description": "Used to paginate. First page of results is 0.",
                "default": "0",
                "minimum": 0
              },
              {
                "name": "sort",
                "type": "string",
                "location": "Query",
                "required": true,
                "default": "lower(images.name),-images.sort_key"
              }
            ],
            "responses": [
              {
                "code": {
                  "integer": {
                    "value": 200
                  }
                },
                "type": "[image]",
                "attributes": []
              },
              {
                "code": {
                  "integer": {
                    "value": 401
                  }
                },
                "type": "unit",
                "attributes": []
              }
            ],
            "attributes": []
          },
          {
            "method": "GET",
            "path": "/images/:id",
            "parameters": [
              {
                "name": "id",
                "type": "string",
                "location": "Path",
                "required": true
              }
            ],
            "responses": [
              {
                "code": {
                  "integer": {
                    "value": 200
                  }
                },
                "type": "image",
                "attributes": []
              },
              {
                "code": {
                  "integer": {
                    "value": 401
                  }
                },
                "type": "unit",
                "attributes": []
              },
              {
                "code": {
                  "integer": {
                    "value": 404
                  }
                },
                "type": "unit",
                "attributes": []
              }
            ],
            "attributes": []
          },
          {
            "method": "DELETE",
            "path": "/images/:id",
            "parameters": [
              {
                "name": "id",
                "type": "string",
                "location": "Path",
                "required": true
              }
            ],
            "responses": [
              {
                "code": {
                  "integer": {
                    "value": 204
                  }
                },
                "type": "unit",
                "attributes": []
              },
              {
                "code": {
                  "integer": {
                    "value": 401
                  }
                },
                "type": "unit",
                "attributes": []
              },
              {
                "code": {
                  "integer": {
                    "value": 404
                  }
                },
                "type": "unit",
                "attributes": []
              }
            ],
            "attributes": []
          }
        ],
        "attributes": [],
        "path": "/images"
      },
      {
        "type": "io.flow.common.v0.models.user",
        "plural": "users",
        "operations": [
          {
            "method": "GET",
            "path": "/users",
            "parameters": [
              {
                "name": "id",
                "type": "string",
                "location": "Query",
                "required": false,
                "description": "Find user with this id. Exact match"
              },
              {
                "name": "email",
                "type": "string",
                "location": "Query",
                "required": false,
                "description": "Find user with this email address. Case in-sensitive. Exact match"
              },
              {
                "name": "identifier",
                "type": "string",
                "location": "Query",
                "required": false,
                "description": "Find user associated with this randomly generated identifier. Exact match"
              }
            ],
            "responses": [
              {
                "code": {
                  "integer": {
                    "value": 200
                  }
                },
                "type": "[io.flow.common.v0.models.user]",
                "attributes": []
              },
              {
                "code": {
                  "integer": {
                    "value": 401
                  }
                },
                "type": "unit",
                "attributes": []
              },
              {
                "code": {
                  "integer": {
                    "value": 422
                  }
                },
                "type": "io.flow.error.v0.models.generic_error",
                "attributes": []
              }
            ],
            "attributes": [],
            "description": "Search for a specific user. You must specify at least 1 parameter - either a id or email - and will receive back either 0 or 1 users."
          },
          {
            "method": "GET",
            "path": "/users/:id",
            "parameters": [
              {
                "name": "id",
                "type": "string",
                "location": "Path",
                "required": true
              }
            ],
            "responses": [
              {
                "code": {
                  "integer": {
                    "value": 200
                  }
                },
                "type": "io.flow.common.v0.models.user",
                "attributes": []
              },
              {
                "code": {
                  "integer": {
                    "value": 401
                  }
                },
                "type": "unit",
                "attributes": []
              },
              {
                "code": {
                  "integer": {
                    "value": 404
                  }
                },
                "type": "unit",
                "attributes": []
              }
            ],
            "attributes": [],
            "description": "Returns information about the user with this id."
          },
          {
            "method": "GET",
            "path": "/users/:id/identifier",
            "parameters": [
              {
                "name": "id",
                "type": "string",
                "location": "Path",
                "required": true
              }
            ],
            "responses": [
              {
                "code": {
                  "integer": {
                    "value": 200
                  }
                },
                "type": "user_identifier",
                "attributes": []
              },
              {
                "code": {
                  "integer": {
                    "value": 401
                  }
                },
                "type": "unit",
                "attributes": []
              },
              {
                "code": {
                  "integer": {
                    "value": 404
                  }
                },
                "type": "unit",
                "attributes": []
              }
            ],
            "attributes": [],
            "description": "Returns the latest identifier for this user. The basic use case is to enable things like unsubscribe w/out  login (and thus once you have an identifier, you can GET /users?identifier=xxx). Identifiers are rotated regularly with last n identifiers being valid (allowing eventual expiration)."
          },
          {
            "method": "POST",
            "path": "/users",
            "parameters": [],
            "responses": [
              {
                "code": {
                  "integer": {
                    "value": 201
                  }
                },
                "type": "io.flow.common.v0.models.user",
                "attributes": []
              },
              {
                "code": {
                  "integer": {
                    "value": 422
                  }
                },
                "type": "io.flow.error.v0.models.generic_error",
                "attributes": []
              }
            ],
            "attributes": [],
            "description": "Create a new user.",
            "body": {
              "type": "user_form",
              "attributes": []
            }
          }
        ],
        "attributes": [],
        "path": "/users"
      },
      {
        "type": "item",
        "plural": "items",
        "operations": [
          {
            "method": "GET",
            "path": "/items",
            "parameters": [
              {
                "name": "q",
                "type": "string",
                "location": "Query",
                "required": false,
                "description": "Actual search query"
              },
              {
                "name": "limit",
                "type": "long",
                "location": "Query",
                "required": true,
                "description": "The number of records to return",
                "default": "25",
                "minimum": 1,
                "maximum": 100
              },
              {
                "name": "offset",
                "type": "long",
                "location": "Query",
                "required": true,
                "description": "Used to paginate. First page of results is 0.",
                "default": "0",
                "minimum": 0
              }
            ],
            "responses": [
              {
                "code": {
                  "integer": {
                    "value": 200
                  }
                },
                "type": "[item]",
                "attributes": []
              },
              {
                "code": {
                  "integer": {
                    "value": 401
                  }
                },
                "type": "unit",
                "attributes": []
              }
            ],
            "attributes": [],
            "description": "Returns a list of all matching items"
          }
        ],
        "attributes": [],
        "path": "/items"
      },
      {
        "type": "membership",
        "plural": "memberships",
        "operations": [
          {
            "method": "GET",
            "path": "/memberships",
            "parameters": [
              {
                "name": "id",
                "type": "[string]",
                "location": "Query",
                "required": false,
                "description": "Filter by any one of these ids"
              },
              {
                "name": "organization",
                "type": "string",
                "location": "Query",
                "required": false,
                "description": "Filter to organization with this key. Case insensitive"
              },
              {
                "name": "user_id",
                "type": "string",
                "location": "Query",
                "required": false
              },
              {
                "name": "role",
                "type": "role",
                "location": "Query",
                "required": false
              },
              {
                "name": "limit",
                "type": "long",
                "location": "Query",
                "required": true,
                "description": "The number of records to return",
                "default": "25",
                "minimum": 1,
                "maximum": 100
              },
              {
                "name": "offset",
                "type": "long",
                "location": "Query",
                "required": true,
                "description": "Used to paginate. First page of results is 0.",
                "default": "0",
                "minimum": 0
              },
              {
                "name": "sort",
                "type": "string",
                "location": "Query",
                "required": true,
                "default": "-memberships.created_at"
              }
            ],
            "responses": [
              {
                "code": {
                  "integer": {
                    "value": 200
                  }
                },
                "type": "[membership]",
                "attributes": []
              },
              {
                "code": {
                  "integer": {
                    "value": 401
                  }
                },
                "type": "unit",
                "attributes": []
              }
            ],
            "attributes": [],
            "description": "Search all memberships. Results are always paginated."
          },
          {
            "method": "GET",
            "path": "/memberships/:id",
            "parameters": [
              {
                "name": "id",
                "type": "string",
                "location": "Path",
                "required": true
              }
            ],
            "responses": [
              {
                "code": {
                  "integer": {
                    "value": 200
                  }
                },
                "type": "membership",
                "attributes": []
              },
              {
                "code": {
                  "integer": {
                    "value": 401
                  }
                },
                "type": "unit",
                "attributes": []
              },
              {
                "code": {
                  "integer": {
                    "value": 404
                  }
                },
                "type": "unit",
                "attributes": []
              }
            ],
            "attributes": []
          },
          {
            "method": "POST",
            "path": "/memberships",
            "parameters": [],
            "responses": [
              {
                "code": {
                  "integer": {
                    "value": 201
                  }
                },
                "type": "membership",
                "attributes": []
              },
              {
                "code": {
                  "integer": {
                    "value": 401
                  }
                },
                "type": "unit",
                "attributes": []
              },
              {
                "code": {
                  "integer": {
                    "value": 404
                  }
                },
                "type": "unit",
                "attributes": []
              },
              {
                "code": {
                  "integer": {
                    "value": 422
                  }
                },
                "type": "io.flow.error.v0.models.generic_error",
                "attributes": []
              }
            ],
            "attributes": [],
            "body": {
              "type": "membership_form",
              "attributes": []
            }
          },
          {
            "method": "DELETE",
            "path": "/memberships/:id",
            "parameters": [
              {
                "name": "id",
                "type": "string",
                "location": "Path",
                "required": true
              }
            ],
            "responses": [
              {
                "code": {
                  "integer": {
                    "value": 204
                  }
                },
                "type": "unit",
                "attributes": []
              },
              {
                "code": {
                  "integer": {
                    "value": 401
                  }
                },
                "type": "unit",
                "attributes": []
              },
              {
                "code": {
                  "integer": {
                    "value": 404
                  }
                },
                "type": "unit",
                "attributes": []
              }
            ],
            "attributes": []
          }
        ],
        "attributes": [],
        "path": "/memberships"
      },
      {
        "type": "organization",
        "plural": "organizations",
        "operations": [
          {
            "method": "GET",
            "path": "/organizations",
            "parameters": [
              {
                "name": "id",
                "type": "[string]",
                "location": "Query",
                "required": false,
                "description": "Filter by any one of these ids"
              },
              {
                "name": "user_id",
                "type": "string",
                "location": "Query",
                "required": false,
                "description": "Find organizations that this user has access to"
              },
              {
                "name": "limit",
                "type": "long",
                "location": "Query",
                "required": true,
                "description": "The number of records to return",
                "default": "25",
                "minimum": 1,
                "maximum": 100
              },
              {
                "name": "offset",
                "type": "long",
                "location": "Query",
                "required": true,
                "description": "Used to paginate. First page of results is 0.",
                "default": "0",
                "minimum": 0
              },
              {
                "name": "sort",
                "type": "string",
                "location": "Query",
                "required": true,
                "default": "organizations.id"
              }
            ],
            "responses": [
              {
                "code": {
                  "integer": {
                    "value": 200
                  }
                },
                "type": "[organization]",
                "attributes": []
              },
              {
                "code": {
                  "integer": {
                    "value": 401
                  }
                },
                "type": "unit",
                "attributes": []
              }
            ],
            "attributes": [],
            "description": "Search organizations. Results are paginated"
          },
          {
            "method": "GET",
            "path": "/organizations/:id",
            "parameters": [
              {
                "name": "id",
                "type": "string",
                "location": "Path",
                "required": true
              }
            ],
            "responses": [
              {
                "code": {
                  "integer": {
                    "value": 200
                  }
                },
                "type": "organization",
                "attributes": []
              },
              {
                "code": {
                  "integer": {
                    "value": 401
                  }
                },
                "type": "unit",
                "attributes": []
              },
              {
                "code": {
                  "integer": {
                    "value": 404
                  }
                },
                "type": "unit",
                "attributes": []
              }
            ],
            "attributes": [],
            "description": "Returns information about the organization with this id."
          },
          {
            "method": "POST",
            "path": "/organizations",
            "parameters": [],
            "responses": [
              {
                "code": {
                  "integer": {
                    "value": 201
                  }
                },
                "type": "organization",
                "attributes": []
              },
              {
                "code": {
                  "integer": {
                    "value": 401
                  }
                },
                "type": "unit",
                "attributes": []
              },
              {
                "code": {
                  "integer": {
                    "value": 422
                  }
                },
                "type": "io.flow.error.v0.models.generic_error",
                "attributes": []
              }
            ],
            "attributes": [],
            "description": "Create a new organization.",
            "body": {
              "type": "organization_form",
              "attributes": []
            }
          },
          {
            "method": "PUT",
            "path": "/organizations/:id",
            "parameters": [
              {
                "name": "id",
                "type": "string",
                "location": "Path",
                "required": true
              }
            ],
            "responses": [
              {
                "code": {
                  "integer": {
                    "value": 200
                  }
                },
                "type": "organization",
                "description": "Organization successfully updated",
                "attributes": []
              },
              {
                "code": {
                  "integer": {
                    "value": 401
                  }
                },
                "type": "unit",
                "attributes": []
              },
              {
                "code": {
                  "integer": {
                    "value": 422
                  }
                },
                "type": "io.flow.error.v0.models.generic_error",
                "attributes": []
              }
            ],
            "attributes": [],
            "description": "Update an existing organization.",
            "body": {
              "type": "organization_form",
              "attributes": []
            }
          },
          {
            "method": "DELETE",
            "path": "/organizations/:id",
            "parameters": [
              {
                "name": "id",
                "type": "string",
                "location": "Path",
                "required": true
              }
            ],
            "responses": [
              {
                "code": {
                  "integer": {
                    "value": 204
                  }
                },
                "type": "unit",
                "attributes": []
              },
              {
                "code": {
                  "integer": {
                    "value": 401
                  }
                },
                "type": "unit",
                "attributes": []
              },
              {
                "code": {
                  "integer": {
                    "value": 404
                  }
                },
                "type": "unit",
                "attributes": []
              }
            ],
            "attributes": []
          }
        ],
        "attributes": [],
        "path": "/organizations"
      },
      {
        "type": "project",
        "plural": "projects",
        "operations": [
          {
            "method": "GET",
            "path": "/projects",
            "parameters": [
              {
                "name": "id",
                "type": "[string]",
                "location": "Query",
                "required": false,
                "description": "Filter by any one of these ids"
              },
              {
                "name": "organization",
                "type": "string",
                "location": "Query",
                "required": false,
                "description": "Filter to resolvers belongs to the organization with this key"
              },
              {
                "name": "name",
                "type": "string",
                "location": "Query",
                "required": false,
                "description": "Find project with this name. Case in-sensitive. Exact match"
              },
              {
                "name": "limit",
                "type": "long",
                "location": "Query",
                "required": true,
                "description": "The number of records to return",
                "default": "25",
                "minimum": 1,
                "maximum": 100
              },
              {
                "name": "offset",
                "type": "long",
                "location": "Query",
                "required": true,
                "description": "Used to paginate. First page of results is 0.",
                "default": "0",
                "minimum": 0
              },
              {
                "name": "sort",
                "type": "string",
                "location": "Query",
                "required": true,
                "default": "projects.id"
              }
            ],
            "responses": [
              {
                "code": {
                  "integer": {
                    "value": 200
                  }
                },
                "type": "[project]",
                "attributes": []
              },
              {
                "code": {
                  "integer": {
                    "value": 401
                  }
                },
                "type": "unit",
                "attributes": []
              }
            ],
            "attributes": [],
            "description": "Search projects. Results are paginated"
          },
          {
            "method": "GET",
            "path": "/projects/:id",
            "parameters": [
              {
                "name": "id",
                "type": "string",
                "location": "Path",
                "required": true
              }
            ],
            "responses": [
              {
                "code": {
                  "integer": {
                    "value": 200
                  }
                },
                "type": "project",
                "attributes": []
              },
              {
                "code": {
                  "integer": {
                    "value": 401
                  }
                },
                "type": "unit",
                "attributes": []
              },
              {
                "code": {
                  "integer": {
                    "value": 404
                  }
                },
                "type": "unit",
                "attributes": []
              }
            ],
            "attributes": [],
            "description": "Returns information about the project with this id."
          },
          {
            "method": "POST",
            "path": "/projects",
            "parameters": [],
            "responses": [
              {
                "code": {
                  "integer": {
                    "value": 201
                  }
                },
                "type": "project",
                "attributes": []
              },
              {
                "code": {
                  "integer": {
                    "value": 401
                  }
                },
                "type": "unit",
                "attributes": []
              },
              {
                "code": {
                  "integer": {
                    "value": 422
                  }
                },
                "type": "io.flow.error.v0.models.generic_error",
                "attributes": []
              }
            ],
            "attributes": [],
            "description": "Create a new project.",
            "body": {
              "type": "project_form",
              "attributes": []
            }
          },
          {
            "method": "POST",
            "path": "/projects/:id/events/pursue_desired_state",
            "parameters": [
              {
                "name": "id",
                "type": "string",
                "location": "Path",
                "required": true
              }
            ],
            "responses": [
              {
                "code": {
                  "integer": {
                    "value": 204
                  }
                },
                "type": "unit",
                "attributes": []
              },
              {
                "code": {
                  "integer": {
                    "value": 401
                  }
                },
                "type": "unit",
                "attributes": []
              },
              {
                "code": {
                  "integer": {
                    "value": 404
                  }
                },
                "type": "unit",
                "attributes": []
              }
            ],
            "attributes": [],
            "description": "Triggers the pursue desired state event."
          },
          {
            "method": "PUT",
            "path": "/projects/:id",
            "parameters": [
              {
                "name": "id",
                "type": "string",
                "location": "Path",
                "required": true
              }
            ],
            "responses": [
              {
                "code": {
                  "integer": {
                    "value": 200
                  }
                },
                "type": "project",
                "description": "Project successfully updated",
                "attributes": []
              },
              {
                "code": {
                  "integer": {
                    "value": 401
                  }
                },
                "type": "unit",
                "attributes": []
              },
              {
                "code": {
                  "integer": {
                    "value": 422
                  }
                },
                "type": "io.flow.error.v0.models.generic_error",
                "attributes": []
              }
            ],
            "attributes": [],
            "description": "Update an existing project.",
            "body": {
              "type": "project_form",
              "attributes": []
            }
          },
          {
            "method": "DELETE",
            "path": "/projects/:id",
            "parameters": [
              {
                "name": "id",
                "type": "string",
                "location": "Path",
                "required": true
              }
            ],
            "responses": [
              {
                "code": {
                  "integer": {
                    "value": 204
                  }
                },
                "type": "unit",
                "attributes": []
              },
              {
                "code": {
                  "integer": {
                    "value": 401
                  }
                },
                "type": "unit",
                "attributes": []
              },
              {
                "code": {
                  "integer": {
                    "value": 404
                  }
                },
                "type": "unit",
                "attributes": []
              }
            ],
            "attributes": []
          },
          {
            "method": "GET",
            "path": "/projects/:id/builds/states",
            "parameters": [
              {
                "name": "id",
                "type": "string",
                "location": "Path",
                "required": true
              }
            ],
            "responses": [
              {
                "code": {
                  "integer": {
                    "value": 200
                  }
                },
                "type": "[build_state]",
                "attributes": []
              },
              {
                "code": {
                  "integer": {
                    "value": 401
                  }
                },
                "type": "unit",
                "attributes": []
              },
              {
                "code": {
                  "integer": {
                    "value": 404
                  }
                },
                "type": "unit",
                "attributes": []
              }
            ],
            "attributes": []
          },
          {
            "method": "GET",
            "path": "/projects/:id/builds/:build_name/states/desired",
            "parameters": [
              {
                "name": "id",
                "type": "string",
                "location": "Path",
                "required": true
              },
              {
                "name": "build_name",
                "type": "string",
                "location": "Path",
                "required": true
              }
            ],
            "responses": [
              {
                "code": {
                  "integer": {
                    "value": 200
                  }
                },
                "type": "[state]",
                "attributes": []
              },
              {
                "code": {
                  "integer": {
                    "value": 401
                  }
                },
                "type": "unit",
                "attributes": []
              },
              {
                "code": {
                  "integer": {
                    "value": 404
                  }
                },
                "type": "unit",
                "attributes": []
              }
            ],
            "attributes": []
          },
          {
            "method": "POST",
            "path": "/projects/:id/builds/:build_name/states/desired",
            "parameters": [
              {
                "name": "id",
                "type": "string",
                "location": "Path",
                "required": true
              },
              {
                "name": "build_name",
                "type": "string",
                "location": "Path",
                "required": true
              }
            ],
            "responses": [
              {
                "code": {
                  "integer": {
                    "value": 200
                  }
                },
                "type": "[state_form]",
                "attributes": []
              },
              {
                "code": {
                  "integer": {
                    "value": 401
                  }
                },
                "type": "unit",
                "attributes": []
              },
              {
                "code": {
                  "integer": {
                    "value": 404
                  }
                },
                "type": "unit",
                "attributes": []
              }
            ],
            "attributes": []
          },
          {
            "method": "GET",
            "path": "/projects/:id/builds/:build_name/states/last",
            "parameters": [
              {
                "name": "id",
                "type": "string",
                "location": "Path",
                "required": true
              },
              {
                "name": "build_name",
                "type": "string",
                "location": "Path",
                "required": true
              }
            ],
            "responses": [
              {
                "code": {
                  "integer": {
                    "value": 200
                  }
                },
                "type": "[state]",
                "attributes": []
              },
              {
                "code": {
                  "integer": {
                    "value": 401
                  }
                },
                "type": "unit",
                "attributes": []
              },
              {
                "code": {
                  "integer": {
                    "value": 404
                  }
                },
                "type": "unit",
                "attributes": []
              }
            ],
            "attributes": []
          }
        ],
        "attributes": [],
        "path": "/projects"
      },
      {
        "type": "repository",
        "plural": "repositories",
        "operations": [
          {
            "method": "GET",
            "path": "/github",
            "parameters": [
              {
                "name": "owner",
                "type": "string",
                "location": "Query",
                "required": false,
                "description": "Optionally filter by owner name. Case in-sensitive. Exact match"
              },
              {
                "name": "name",
                "type": "string",
                "location": "Query",
                "required": false,
                "description": "Optionally filter by repo name. Case in-sensitive. Exact match"
              },
              {
                "name": "organization_id",
                "type": "string",
                "location": "Query",
                "required": false,
                "description": "If specified, we enable additional filtering by this organization (see existing_project parameter)."
              },
              {
                "name": "existing_project",
                "type": "boolean",
                "location": "Query",
                "required": false,
                "description": "Optionally filter by repositories that are either already mapped to existing projects or not. Requires organization_id parameter to also be specified."
              },
              {
                "name": "limit",
                "type": "long",
                "location": "Query",
                "required": true,
                "description": "The number of records to return",
                "default": "25",
                "minimum": 1,
                "maximum": 100
              },
              {
                "name": "offset",
                "type": "long",
                "location": "Query",
                "required": true,
                "description": "Used to paginate. First page of results is 0.",
                "default": "0",
                "minimum": 0
              }
            ],
            "responses": [
              {
                "code": {
                  "integer": {
                    "value": 200
                  }
                },
                "type": "[io.flow.github.v0.models.repository]",
                "attributes": []
              },
              {
                "code": {
                  "integer": {
                    "value": 401
                  }
                },
                "type": "unit",
                "attributes": []
              },
              {
                "code": {
                  "integer": {
                    "value": 422
                  }
                },
                "type": "io.flow.error.v0.models.generic_error",
                "attributes": []
              }
            ],
            "attributes": [],
            "description": "Returns a list of repositories from github"
          },
          {
            "method": "GET",
            "path": "/github/:owner/:repo/config",
            "parameters": [
              {
                "name": "owner",
                "type": "string",
                "location": "Path",
                "required": true
              },
              {
                "name": "repo",
                "type": "string",
                "location": "Path",
                "required": true
              }
            ],
            "responses": [
              {
                "code": {
                  "integer": {
                    "value": 200
                  }
                },
                "type": "io.flow.delta.config.v0.unions.config",
                "attributes": []
              },
              {
                "code": {
                  "integer": {
                    "value": 401
                  }
                },
                "type": "unit",
                "attributes": []
              },
              {
                "code": {
                  "integer": {
                    "value": 422
                  }
                },
                "type": "io.flow.error.v0.models.generic_error",
                "attributes": []
              }
            ],
            "attributes": [],
            "description": "Returns the delta configuration for the specified github repo, if the repo has a .delta file in its root"
          }
        ],
        "attributes": [],
        "path": "/github"
      },
      {
        "type": "sha",
        "plural": "shas",
        "operations": [
          {
            "method": "GET",
            "path": "/shas",
            "parameters": [
              {
                "name": "id",
                "type": "[string]",
                "location": "Query",
                "required": false,
                "description": "Filter by any one of these ids"
              },
              {
                "name": "project_id",
                "type": "string",
                "location": "Query",
                "required": false,
                "description": "Find shas for this project."
              },
              {
                "name": "branch",
                "type": "string",
                "location": "Query",
                "required": false,
                "description": "Find shas for this branch.",
                "example": "master"
              },
              {
                "name": "hash",
                "type": "string",
                "location": "Query",
                "required": false,
                "description": "Find shas for this hash.",
                "example": "master"
              },
              {
                "name": "limit",
                "type": "long",
                "location": "Query",
                "required": true,
                "description": "The number of records to return",
                "default": "25",
                "minimum": 1,
                "maximum": 100
              },
              {
                "name": "offset",
                "type": "long",
                "location": "Query",
                "required": true,
                "description": "Used to paginate. First page of results is 0.",
                "default": "0",
                "minimum": 0
              },
              {
                "name": "sort",
                "type": "string",
                "location": "Query",
                "required": true,
                "default": "-shas.created_at"
              }
            ],
            "responses": [
              {
                "code": {
                  "integer": {
                    "value": 200
                  }
                },
                "type": "[sha]",
                "attributes": []
              },
              {
                "code": {
                  "integer": {
                    "value": 401
                  }
                },
                "type": "unit",
                "attributes": []
              }
            ],
            "attributes": []
          },
          {
            "method": "GET",
            "path": "/shas/:id",
            "parameters": [
              {
                "name": "id",
                "type": "string",
                "location": "Path",
                "required": true
              }
            ],
            "responses": [
              {
                "code": {
                  "integer": {
                    "value": 200
                  }
                },
                "type": "sha",
                "attributes": []
              },
              {
                "code": {
                  "integer": {
                    "value": 401
                  }
                },
                "type": "unit",
                "attributes": []
              },
              {
                "code": {
                  "integer": {
                    "value": 404
                  }
                },
                "type": "unit",
                "attributes": []
              }
            ],
            "attributes": []
          },
          {
            "method": "DELETE",
            "path": "/shas/:id",
            "parameters": [
              {
                "name": "id",
                "type": "string",
                "location": "Path",
                "required": true
              }
            ],
            "responses": [
              {
                "code": {
                  "integer": {
                    "value": 204
                  }
                },
                "type": "unit",
                "attributes": []
              },
              {
                "code": {
                  "integer": {
                    "value": 401
                  }
                },
                "type": "unit",
                "attributes": []
              },
              {
                "code": {
                  "integer": {
                    "value": 404
                  }
                },
                "type": "unit",
                "attributes": []
              }
            ],
            "attributes": []
          }
        ],
        "attributes": [],
        "path": "/shas"
      },
      {
        "type": "sns_message_ami",
        "plural": "sns_message_amis",
        "operations": [
          {
            "method": "POST",
            "path": "/sns_message_amis",
            "parameters": [],
            "responses": [
              {
                "code": {
                  "integer": {
                    "value": 200
                  }
                },
                "type": "unit",
                "attributes": []
              }
            ],
            "attributes": [],
            "body": {
              "type": "string",
              "attributes": []
            }
          }
        ],
        "attributes": [],
        "path": "/sns_message_amis"
      },
      {
        "type": "subscription",
        "plural": "subscriptions",
        "operations": [
          {
            "method": "GET",
            "path": "/subscriptions",
            "parameters": [
              {
                "name": "id",
                "type": "[string]",
                "location": "Query",
                "required": false,
                "description": "Filter by any one of these ids"
              },
              {
                "name": "user_id",
                "type": "string",
                "location": "Query",
                "required": false,
                "description": "Find subscriptions for this user."
              },
              {
                "name": "identifier",
                "type": "string",
                "location": "Query",
                "required": false,
                "description": "Find subscriptions associated with this user identifier. Exact match"
              },
              {
                "name": "publication",
                "type": "publication",
                "location": "Query",
                "required": false,
                "description": "Find subscriptions for this publication."
              },
              {
                "name": "limit",
                "type": "long",
                "location": "Query",
                "required": true,
                "description": "The number of records to return",
                "default": "25",
                "minimum": 1,
                "maximum": 100
              },
              {
                "name": "offset",
                "type": "long",
                "location": "Query",
                "required": true,
                "description": "Used to paginate. First page of results is 0.",
                "default": "0",
                "minimum": 0
              },
              {
                "name": "sort",
                "type": "string",
                "location": "Query",
                "required": true,
                "default": "-subscriptions.created_at"
              }
            ],
            "responses": [
              {
                "code": {
                  "integer": {
                    "value": 200
                  }
                },
                "type": "[subscription]",
                "attributes": []
              },
              {
                "code": {
                  "integer": {
                    "value": 401
                  }
                },
                "type": "unit",
                "attributes": []
              }
            ],
            "attributes": [],
            "description": "Search subscriptions. Always paginated."
          },
          {
            "method": "GET",
            "path": "/subscriptions/:id",
            "parameters": [
              {
                "name": "id",
                "type": "string",
                "location": "Path",
                "required": true
              }
            ],
            "responses": [
              {
                "code": {
                  "integer": {
                    "value": 200
                  }
                },
                "type": "subscription",
                "attributes": []
              },
              {
                "code": {
                  "integer": {
                    "value": 401
                  }
                },
                "type": "unit",
                "attributes": []
              },
              {
                "code": {
                  "integer": {
                    "value": 404
                  }
                },
                "type": "unit",
                "attributes": []
              }
            ],
            "attributes": [],
            "description": "Returns information about a specific subscription."
          },
          {
            "method": "POST",
            "path": "/subscriptions",
            "parameters": [
              {
                "name": "identifier",
                "type": "string",
                "location": "Query",
                "required": false,
                "description": "If a user identifier is provided, authentication is bypassed"
              }
            ],
            "responses": [
              {
                "code": {
                  "integer": {
                    "value": 201
                  }
                },
                "type": "subscription",
                "attributes": []
              },
              {
                "code": {
                  "integer": {
                    "value": 401
                  }
                },
                "type": "unit",
                "attributes": []
              },
              {
                "code": {
                  "integer": {
                    "value": 422
                  }
                },
                "type": "io.flow.error.v0.models.generic_error",
                "attributes": []
              }
            ],
            "attributes": [],
            "description": "Create a new subscription.",
            "body": {
              "type": "subscription_form",
              "attributes": []
            }
          },
          {
            "method": "DELETE",
            "path": "/subscriptions/:id",
            "parameters": [
              {
                "name": "id",
                "type": "string",
                "location": "Path",
                "required": true
              },
              {
                "name": "identifier",
                "type": "string",
                "location": "Query",
                "required": false,
                "description": "If a user identifier is provided, authentication is bypassed"
              }
            ],
            "responses": [
              {
                "code": {
                  "integer": {
                    "value": 204
                  }
                },
                "type": "unit",
                "attributes": []
              },
              {
                "code": {
                  "integer": {
                    "value": 401
                  }
                },
                "type": "unit",
                "attributes": []
              },
              {
                "code": {
                  "integer": {
                    "value": 404
                  }
                },
                "type": "unit",
                "attributes": []
              }
            ],
            "attributes": []
          }
        ],
        "attributes": [],
        "path": "/subscriptions"
      },
      {
        "type": "tag",
        "plural": "tags",
        "operations": [
          {
            "method": "GET",
            "path": "/tags",
            "parameters": [
              {
                "name": "id",
                "type": "[string]",
                "location": "Query",
                "required": false,
                "description": "Filter by any one of these ids"
              },
              {
                "name": "project_id",
                "type": "string",
                "location": "Query",
                "required": false,
                "description": "Find tags for this project."
              },
              {
                "name": "name",
                "type": "string",
                "location": "Query",
                "required": false,
                "description": "Find tags with this name.",
                "example": "0.0.1"
              },
              {
                "name": "limit",
                "type": "long",
                "location": "Query",
                "required": true,
                "description": "The number of records to return",
                "default": "25",
                "minimum": 1,
                "maximum": 100
              },
              {
                "name": "offset",
                "type": "long",
                "location": "Query",
                "required": true,
                "description": "Used to paginate. First page of results is 0.",
                "default": "0",
                "minimum": 0
              },
              {
                "name": "sort",
                "type": "string",
                "location": "Query",
                "required": true,
                "default": "-tags.sort_key"
              }
            ],
            "responses": [
              {
                "code": {
                  "integer": {
                    "value": 200
                  }
                },
                "type": "[tag]",
                "attributes": []
              },
              {
                "code": {
                  "integer": {
                    "value": 401
                  }
                },
                "type": "unit",
                "attributes": []
              }
            ],
            "attributes": []
          },
          {
            "method": "GET",
            "path": "/tags/:id",
            "parameters": [
              {
                "name": "id",
                "type": "string",
                "location": "Path",
                "required": true
              }
            ],
            "responses": [
              {
                "code": {
                  "integer": {
                    "value": 200
                  }
                },
                "type": "tag",
                "attributes": []
              },
              {
                "code": {
                  "integer": {
                    "value": 401
                  }
                },
                "type": "unit",
                "attributes": []
              },
              {
                "code": {
                  "integer": {
                    "value": 404
                  }
                },
                "type": "unit",
                "attributes": []
              }
            ],
            "attributes": []
          },
          {
            "method": "DELETE",
            "path": "/tags/:id",
            "parameters": [
              {
                "name": "id",
                "type": "string",
                "location": "Path",
                "required": true
              }
            ],
            "responses": [
              {
                "code": {
                  "integer": {
                    "value": 204
                  }
                },
                "type": "unit",
                "attributes": []
              },
              {
                "code": {
                  "integer": {
                    "value": 401
                  }
                },
                "type": "unit",
                "attributes": []
              },
              {
                "code": {
                  "integer": {
                    "value": 404
                  }
                },
                "type": "unit",
                "attributes": []
              }
            ],
            "attributes": []
          }
        ],
        "attributes": [],
        "path": "/tags"
      },
      {
        "type": "token",
        "plural": "tokens",
        "operations": [
          {
            "method": "GET",
            "path": "/tokens",
            "parameters": [
              {
                "name": "id",
                "type": "[string]",
                "location": "Query",
                "required": false,
                "description": "Filter by any one of these ids"
              },
              {
                "name": "user_id",
                "type": "string",
                "location": "Query",
                "required": false,
                "description": "Find tokens for this user."
              },
              {
                "name": "limit",
                "type": "long",
                "location": "Query",
                "required": true,
                "description": "The number of records to return",
                "default": "25",
                "minimum": 1,
                "maximum": 100
              },
              {
                "name": "offset",
                "type": "long",
                "location": "Query",
                "required": true,
                "description": "Used to paginate. First page of results is 0.",
                "default": "0",
                "minimum": 0
              },
              {
                "name": "sort",
                "type": "string",
                "location": "Query",
                "required": true,
                "default": "-tokens.created_at"
              }
            ],
            "responses": [
              {
                "code": {
                  "integer": {
                    "value": 200
                  }
                },
                "type": "[token]",
                "attributes": []
              },
              {
                "code": {
                  "integer": {
                    "value": 401
                  }
                },
                "type": "unit",
                "attributes": []
              }
            ],
            "attributes": []
          },
          {
            "method": "GET",
            "path": "/tokens/:id",
            "parameters": [
              {
                "name": "id",
                "type": "string",
                "location": "Path",
                "required": true
              }
            ],
            "responses": [
              {
                "code": {
                  "integer": {
                    "value": 200
                  }
                },
                "type": "token",
                "attributes": []
              },
              {
                "code": {
                  "integer": {
                    "value": 401
                  }
                },
                "type": "unit",
                "attributes": []
              },
              {
                "code": {
                  "integer": {
                    "value": 404
                  }
                },
                "type": "unit",
                "attributes": []
              }
            ],
            "attributes": [],
            "description": "Used to fetch one token"
          },
          {
            "method": "POST",
            "path": "/tokens",
            "parameters": [],
            "responses": [
              {
                "code": {
                  "integer": {
                    "value": 201
                  }
                },
                "type": "token",
                "attributes": []
              },
              {
                "code": {
                  "integer": {
                    "value": 401
                  }
                },
                "type": "unit",
                "attributes": []
              },
              {
                "code": {
                  "integer": {
                    "value": 422
                  }
                },
                "type": "io.flow.error.v0.models.generic_error",
                "attributes": []
              }
            ],
            "attributes": [],
            "description": "Create a new API token for this user",
            "body": {
              "type": "token_form",
              "attributes": []
            }
          },
          {
            "method": "DELETE",
            "path": "/tokens/:id",
            "parameters": [
              {
                "name": "id",
                "type": "string",
                "location": "Path",
                "required": true
              }
            ],
            "responses": [
              {
                "code": {
                  "integer": {
                    "value": 204
                  }
                },
                "type": "unit",
                "attributes": []
              },
              {
                "code": {
                  "integer": {
                    "value": 401
                  }
                },
                "type": "unit",
                "attributes": []
              },
              {
                "code": {
                  "integer": {
                    "value": 404
                  }
                },
                "type": "unit",
                "attributes": []
              }
            ],
            "attributes": []
          }
        ],
        "attributes": [],
        "path": "/tokens"
      }
    ],
    "attributes": [],
    "annotations": []
  },
  "attributes": [],
  "user_agent": "apibuilder 0.15.33 app.apibuilder.io/flow/delta/latest",
  "imported_services": [
    {
      "apidoc": {
        "version": "0.12.8"
      },
      "name": "Github",
      "organization": {
        "key": "flow"
      },
      "application": {
        "key": "github"
      },
      "namespace": "io.flow.github.v0",
      "version": "0.0.3",
      "info": {
        "license": {
          "name": "MIT",
          "url": "http://opensource.org/licenses/MIT"
        },
        "contact": {
          "name": "Michael Bryzek",
          "url": "http://twitter.com/mbryzek",
          "email": "mbryzek@alum.mit.edu"
        }
      },
      "headers": [],
      "imports": [],
      "enums": [
        {
          "name": "contents_type",
          "plural": "contents_types",
          "values": [
            {
              "name": "file",
              "attributes": []
            },
            {
              "name": "dir",
              "attributes": []
            },
            {
              "name": "symlink",
              "attributes": []
            },
            {
              "name": "submodule",
              "attributes": []
            }
          ],
          "attributes": []
        },
        {
          "name": "encoding",
          "plural": "encodings",
          "values": [
            {
              "name": "base64",
              "attributes": []
            },
            {
              "name": "utf-8",
              "attributes": []
            }
          ],
          "attributes": []
        },
        {
          "name": "hook_event",
          "plural": "hook_events",
          "values": [
            {
              "name": "push",
              "attributes": []
            },
            {
              "name": "pull_request",
              "attributes": []
            }
          ],
          "attributes": []
        },
        {
          "name": "node_type",
          "plural": "node_types",
          "values": [
            {
              "name": "blob",
              "attributes": []
            },
            {
              "name": "tree",
              "attributes": []
            },
            {
              "name": "commit",
              "attributes": []
            }
          ],
          "attributes": []
        },
        {
          "name": "owner_type",
          "plural": "owner_types",
          "values": [
            {
              "name": "User",
              "attributes": []
            }
          ],
          "attributes": []
        },
        {
          "name": "visibility",
          "plural": "visibilities",
          "values": [
            {
              "name": "all",
              "attributes": []
            },
            {
              "name": "public",
              "attributes": []
            },
            {
              "name": "private",
              "attributes": []
            }
          ],
          "attributes": []
        }
      ],
      "interfaces": [],
      "unions": [],
      "models": [
        {
          "name": "blob",
          "plural": "blobs",
          "fields": [
            {
              "name": "content",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "encoding",
              "type": "encoding",
              "required": true,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "url",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "sha",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "size",
              "type": "long",
              "required": true,
              "attributes": [],
              "annotations": []
            }
          ],
          "attributes": [],
          "interfaces": []
        },
        {
          "name": "blob_created",
          "plural": "blob_createds",
          "fields": [
            {
              "name": "url",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "sha",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": []
            }
          ],
          "attributes": [],
          "interfaces": []
        },
        {
          "name": "blob_form",
          "plural": "blob_forms",
          "fields": [
            {
              "name": "content",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "encoding",
              "type": "encoding",
              "required": true,
              "attributes": [],
              "annotations": [],
              "default": "utf-8"
            }
          ],
          "attributes": [],
          "interfaces": []
        },
        {
          "name": "commit",
          "plural": "commits",
          "fields": [
            {
              "name": "sha",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": [],
              "example": "c5b97d5ae6c19d5c5df71a34c7fbeeda2479ccbc"
            },
            {
              "name": "url",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": [],
              "example": "https://api.github.com/repos/octocat/Hello-World/commits/c5b97d5ae6c19d5c5df71a34c7fbeeda2479ccbc"
            },
            {
              "name": "html_url",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "author",
              "type": "person",
              "required": true,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "committer",
              "type": "person",
              "required": true,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "tree",
              "type": "tree_summary",
              "required": true,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "message",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "parents",
              "type": "[commit_summary]",
              "required": true,
              "attributes": [],
              "annotations": []
            }
          ],
          "attributes": [],
          "interfaces": []
        },
        {
          "name": "commit_form",
          "plural": "commit_forms",
          "fields": [
            {
              "name": "message",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "tree",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "parents",
              "type": "[string]",
              "required": true,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "author",
              "type": "person",
              "required": true,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "committer",
              "type": "person",
              "required": true,
              "attributes": [],
              "annotations": []
            }
          ],
          "attributes": [],
          "interfaces": []
        },
        {
          "name": "commit_response",
          "plural": "commit_responses",
          "fields": [
            {
              "name": "sha",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "url",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "author",
              "type": "person",
              "required": true,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "committer",
              "type": "person",
              "required": true,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "message",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "tree",
              "type": "tree_summary",
              "required": true,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "parents",
              "type": "[tree_summary]",
              "required": true,
              "attributes": [],
              "annotations": []
            }
          ],
          "attributes": [],
          "interfaces": []
        },
        {
          "name": "commit_summary",
          "plural": "commit_summaries",
          "fields": [
            {
              "name": "sha",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": [],
              "example": "c5b97d5ae6c19d5c5df71a34c7fbeeda2479ccbc"
            },
            {
              "name": "url",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": [],
              "example": "https://api.github.com/repos/octocat/Hello-World/commits/c5b97d5ae6c19d5c5df71a34c7fbeeda2479ccbc"
            }
          ],
          "attributes": [],
          "interfaces": []
        },
        {
          "name": "contents",
          "plural": "contents",
          "fields": [
            {
              "name": "type",
              "type": "contents_type",
              "required": true,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "encoding",
              "type": "encoding",
              "required": true,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "size",
              "type": "long",
              "required": true,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "name",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "path",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "content",
              "type": "string",
              "required": false,
              "attributes": [],
              "annotations": [],
              "description": "If file, then present"
            },
            {
              "name": "sha",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "url",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "git_url",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "html_url",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "download_url",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": []
            }
          ],
          "attributes": [],
          "interfaces": []
        },
        {
          "name": "create_tree_form",
          "plural": "create_tree_forms",
          "fields": [
            {
              "name": "base_tree",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "tree",
              "type": "[tree_form]",
              "required": true,
              "attributes": [],
              "annotations": []
            }
          ],
          "attributes": [],
          "interfaces": []
        },
        {
          "name": "create_tree_response",
          "plural": "create_tree_responses",
          "fields": [
            {
              "name": "sha",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "url",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "tree_result",
              "type": "tree",
              "required": true,
              "attributes": [],
              "annotations": []
            }
          ],
          "attributes": [],
          "interfaces": []
        },
        {
          "name": "error",
          "plural": "errors",
          "fields": [
            {
              "name": "resource",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": [],
              "example": "Issue"
            },
            {
              "name": "field",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": [],
              "example": "title"
            },
            {
              "name": "code",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": [],
              "example": "missing_field"
            }
          ],
          "attributes": [],
          "interfaces": []
        },
        {
          "name": "github_object",
          "plural": "github_objects",
          "fields": [
            {
              "name": "type",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": [],
              "example": "commit"
            },
            {
              "name": "sha",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "url",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": []
            }
          ],
          "attributes": [],
          "interfaces": []
        },
        {
          "name": "hook",
          "plural": "hooks",
          "fields": [
            {
              "name": "id",
              "type": "long",
              "required": true,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "url",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "test_url",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "ping_url",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "name",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "events",
              "type": "[hook_event]",
              "required": true,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "active",
              "type": "boolean",
              "required": true,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "config",
              "type": "hook_config",
              "required": true,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "updated_at",
              "type": "date-time-iso8601",
              "required": true,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "created_at",
              "type": "date-time-iso8601",
              "required": true,
              "attributes": [],
              "annotations": []
            }
          ],
          "attributes": [],
          "interfaces": [],
          "description": "See https://developer.github.com/v3/repos/hooks/#create-a-hook"
        },
        {
          "name": "hook_config",
          "plural": "hook_configs",
          "fields": [
            {
              "name": "url",
              "type": "string",
              "required": false,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "content_type",
              "type": "string",
              "required": false,
              "attributes": [],
              "annotations": [],
              "example": "json or form"
            }
          ],
          "attributes": [],
          "interfaces": []
        },
        {
          "name": "node",
          "plural": "nodes",
          "fields": [
            {
              "name": "path",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "mode",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": [],
              "description": "100644 file (blob), 100755 executable (blob), 040000 subdirectory (tree), 160000 submodule (commit)"
            },
            {
              "name": "type",
              "type": "node_type",
              "required": true,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "size",
              "type": "long",
              "required": true,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "sha",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "url",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": []
            }
          ],
          "attributes": [],
          "interfaces": []
        },
        {
          "name": "node_form",
          "plural": "node_forms",
          "fields": [
            {
              "name": "path",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "mode",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": [],
              "description": "100644 file (blob), 100755 executable (blob), 040000 subdirectory (tree), 160000 submodule (commit)"
            },
            {
              "name": "type",
              "type": "node_type",
              "required": true,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "sha",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": []
            }
          ],
          "attributes": [],
          "interfaces": []
        },
        {
          "name": "person",
          "plural": "people",
          "fields": [
            {
              "name": "name",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "email",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "date",
              "type": "date-time-iso8601",
              "required": true,
              "attributes": [],
              "annotations": []
            }
          ],
          "attributes": [],
          "interfaces": []
        },
        {
          "name": "pull_request",
          "plural": "pull_requests",
          "fields": [
            {
              "name": "id",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "url",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "number",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": []
            }
          ],
          "attributes": [],
          "interfaces": []
        },
        {
          "name": "pull_request_form",
          "plural": "pull_request_forms",
          "fields": [
            {
              "name": "title",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "head",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "base",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "body",
              "type": "string",
              "required": false,
              "attributes": [],
              "annotations": []
            }
          ],
          "attributes": [],
          "interfaces": []
        },
        {
          "name": "ref",
          "plural": "refs",
          "fields": [
            {
              "name": "ref",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": [],
              "example": "refs/heads/featureA or refs/heads/master"
            },
            {
              "name": "url",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "object",
              "type": "github_object",
              "required": true,
              "attributes": [],
              "annotations": []
            }
          ],
          "attributes": [],
          "interfaces": []
        },
        {
          "name": "ref_form",
          "plural": "ref_forms",
          "fields": [
            {
              "name": "ref",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": [],
              "example": "refs/heads/featureA or refs/heads/master"
            },
            {
              "name": "sha",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": [],
              "example": "940bd336248efae0f9ee5bc7b2d5c985887b16ac"
            }
          ],
          "attributes": [],
          "interfaces": []
        },
        {
          "name": "ref_update_form",
          "plural": "ref_update_forms",
          "fields": [
            {
              "name": "sha",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": [],
              "example": "940bd336248efae0f9ee5bc7b2d5c985887b16ac"
            }
          ],
          "attributes": [],
          "interfaces": []
        },
        {
          "name": "repository",
          "plural": "repositories",
          "fields": [
            {
              "name": "id",
              "type": "long",
              "required": true,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "owner",
              "type": "user",
              "required": true,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "name",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "full_name",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "private",
              "type": "boolean",
              "required": true,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "description",
              "type": "string",
              "required": false,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "url",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "html_url",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": []
            }
          ],
          "attributes": [],
          "interfaces": []
        },
        {
          "name": "tag",
          "plural": "tags",
          "fields": [
            {
              "name": "tag",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": [],
              "example": "v0.0.1"
            },
            {
              "name": "sha",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": [],
              "example": "940bd336248efae0f9ee5bc7b2d5c985887b16ac"
            },
            {
              "name": "url",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": [],
              "example": "https://api.github.com/repos/octocat/Hello-World/git/tags/940bd336248efae0f9ee5bc7b2d5c985887b16ac"
            },
            {
              "name": "message",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": [],
              "example": "initial version"
            },
            {
              "name": "tagger",
              "type": "tagger",
              "required": true,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "object",
              "type": "github_object",
              "required": true,
              "attributes": [],
              "annotations": []
            }
          ],
          "attributes": [],
          "interfaces": []
        },
        {
          "name": "tag_form",
          "plural": "tag_forms",
          "fields": [
            {
              "name": "tag",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": [],
              "example": "v0.0.1"
            },
            {
              "name": "message",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "object",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": [],
              "description": "The SHA of the git object this is tagging",
              "example": "940bd336248efae0f9ee5bc7b2d5c985887b16ac"
            },
            {
              "name": "type",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": [],
              "default": "commit"
            },
            {
              "name": "tagger",
              "type": "tagger",
              "required": true,
              "attributes": [],
              "annotations": []
            }
          ],
          "attributes": [],
          "interfaces": []
        },
        {
          "name": "tag_summary",
          "plural": "tag_summaries",
          "fields": [
            {
              "name": "name",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": [],
              "example": "v0.1"
            },
            {
              "name": "commit",
              "type": "commit_summary",
              "required": true,
              "attributes": [],
              "annotations": []
            }
          ],
          "attributes": [],
          "interfaces": []
        },
        {
          "name": "tagger",
          "plural": "taggers",
          "fields": [
            {
              "name": "name",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "email",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "date",
              "type": "date-time-iso8601",
              "required": true,
              "attributes": [],
              "annotations": []
            }
          ],
          "attributes": [],
          "interfaces": []
        },
        {
          "name": "tree",
          "plural": "trees",
          "fields": [
            {
              "name": "sha",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "url",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "truncated",
              "type": "boolean",
              "required": true,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "tree",
              "type": "[node]",
              "required": true,
              "attributes": [],
              "annotations": []
            }
          ],
          "attributes": [],
          "interfaces": []
        },
        {
          "name": "tree_form",
          "plural": "tree_forms",
          "fields": [
            {
              "name": "path",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "mode",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": [],
              "description": "100644 file (blob), 100755 executable (blob), 040000 subdirectory (tree), 160000 submodule (commit)"
            },
            {
              "name": "type",
              "type": "node_type",
              "required": true,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "sha",
              "type": "string",
              "required": false,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "content",
              "type": "string",
              "required": false,
              "attributes": [],
              "annotations": []
            }
          ],
          "attributes": [],
          "interfaces": []
        },
        {
          "name": "tree_result",
          "plural": "tree_results",
          "fields": [
            {
              "name": "path",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "mode",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": [],
              "description": "100644 file (blob), 100755 executable (blob), 040000 subdirectory (tree), 160000 submodule (commit)"
            },
            {
              "name": "type",
              "type": "node_type",
              "required": true,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "size",
              "type": "long",
              "required": true,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "sha",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "url",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": []
            }
          ],
          "attributes": [],
          "interfaces": []
        },
        {
          "name": "tree_summary",
          "plural": "tree_summaries",
          "fields": [
            {
              "name": "url",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "sha",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": []
            }
          ],
          "attributes": [],
          "interfaces": []
        },
        {
          "name": "unprocessable_entity",
          "plural": "unprocessable_entities",
          "fields": [
            {
              "name": "message",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": [],
              "example": "Validation Failed"
            },
            {
              "name": "errors",
              "type": "[error]",
              "required": false,
              "attributes": [],
              "annotations": []
            }
          ],
          "attributes": [],
          "interfaces": []
        },
        {
          "name": "user",
          "plural": "users",
          "fields": [
            {
              "name": "id",
              "type": "long",
              "required": true,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "login",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "name",
              "type": "string",
              "required": false,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "email",
              "type": "string",
              "required": false,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "avatar_url",
              "type": "string",
              "required": false,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "gravatar_id",
              "type": "string",
              "required": false,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "url",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "html_url",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "type",
              "type": "owner_type",
              "required": true,
              "attributes": [],
              "annotations": []
            }
          ],
          "attributes": [],
          "interfaces": []
        },
        {
          "name": "user_email",
          "plural": "user_emails",
          "fields": [
            {
              "name": "email",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "verified",
              "type": "boolean",
              "required": true,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "primary",
              "type": "boolean",
              "required": true,
              "attributes": [],
              "annotations": []
            }
          ],
          "attributes": [],
          "interfaces": []
        }
      ],
      "resources": [
        {
          "type": "blob",
          "plural": "blobs",
          "operations": [
            {
              "method": "GET",
              "path": "/repos/:owner/:repo/git/blobs/:sha",
              "parameters": [
                {
                  "name": "owner",
                  "type": "string",
                  "location": "Path",
                  "required": true
                },
                {
                  "name": "repo",
                  "type": "string",
                  "location": "Path",
                  "required": true
                },
                {
                  "name": "sha",
                  "type": "string",
                  "location": "Path",
                  "required": true
                }
              ],
              "responses": [
                {
                  "code": {
                    "integer": {
                      "value": 200
                    }
                  },
                  "type": "blob"
                },
                {
                  "code": {
                    "integer": {
                      "value": 404
                    }
                  },
                  "type": "unit"
                }
              ],
              "attributes": []
            },
            {
              "method": "POST",
              "path": "/repos/:owner/:repo/git/blobs",
              "parameters": [
                {
                  "name": "owner",
                  "type": "string",
                  "location": "Path",
                  "required": true
                },
                {
                  "name": "repo",
                  "type": "string",
                  "location": "Path",
                  "required": true
                }
              ],
              "responses": [
                {
                  "code": {
                    "integer": {
                      "value": 201
                    }
                  },
                  "type": "blob_created"
                },
                {
                  "code": {
                    "integer": {
                      "value": 404
                    }
                  },
                  "type": "unit"
                },
                {
                  "code": {
                    "integer": {
                      "value": 422
                    }
                  },
                  "type": "unprocessable_entity"
                }
              ],
              "attributes": [],
              "body": {
                "type": "blob_form",
                "attributes": []
              }
            }
          ],
          "attributes": [],
          "path": "/repos/:owner/:repo/git/blobs"
        },
        {
          "type": "commit",
          "plural": "commits",
          "operations": [
            {
              "method": "GET",
              "path": "/repos/:owner/:repo/git/commits/:sha",
              "parameters": [
                {
                  "name": "owner",
                  "type": "string",
                  "location": "Path",
                  "required": true
                },
                {
                  "name": "repo",
                  "type": "string",
                  "location": "Path",
                  "required": true
                },
                {
                  "name": "sha",
                  "type": "string",
                  "location": "Path",
                  "required": true
                }
              ],
              "responses": [
                {
                  "code": {
                    "integer": {
                      "value": 200
                    }
                  },
                  "type": "commit"
                },
                {
                  "code": {
                    "integer": {
                      "value": 404
                    }
                  },
                  "type": "unit"
                },
                {
                  "code": {
                    "integer": {
                      "value": 422
                    }
                  },
                  "type": "unprocessable_entity"
                }
              ],
              "attributes": []
            },
            {
              "method": "POST",
              "path": "/repos/:owner/:repo/git/commits",
              "parameters": [
                {
                  "name": "owner",
                  "type": "string",
                  "location": "Path",
                  "required": true
                },
                {
                  "name": "repo",
                  "type": "string",
                  "location": "Path",
                  "required": true
                }
              ],
              "responses": [
                {
                  "code": {
                    "integer": {
                      "value": 201
                    }
                  },
                  "type": "commit_response"
                },
                {
                  "code": {
                    "integer": {
                      "value": 404
                    }
                  },
                  "type": "unit"
                },
                {
                  "code": {
                    "integer": {
                      "value": 422
                    }
                  },
                  "type": "unprocessable_entity"
                }
              ],
              "attributes": [],
              "body": {
                "type": "commit_form",
                "attributes": []
              }
            }
          ],
          "attributes": [],
          "path": "/repos/:owner/:repo/git/commits"
        },
        {
          "type": "contents",
          "plural": "contents",
          "operations": [
            {
              "method": "GET",
              "path": "/repos/:owner/:repo/readme",
              "parameters": [
                {
                  "name": "owner",
                  "type": "string",
                  "location": "Path",
                  "required": true
                },
                {
                  "name": "repo",
                  "type": "string",
                  "location": "Path",
                  "required": true
                },
                {
                  "name": "ref",
                  "type": "string",
                  "location": "Query",
                  "required": true,
                  "default": "master"
                }
              ],
              "responses": [
                {
                  "code": {
                    "integer": {
                      "value": 200
                    }
                  },
                  "type": "contents"
                },
                {
                  "code": {
                    "integer": {
                      "value": 401
                    }
                  },
                  "type": "unit"
                },
                {
                  "code": {
                    "integer": {
                      "value": 404
                    }
                  },
                  "type": "unit"
                }
              ],
              "attributes": []
            },
            {
              "method": "GET",
              "path": "/repos/:owner/:repo/contents/:path",
              "parameters": [
                {
                  "name": "owner",
                  "type": "string",
                  "location": "Path",
                  "required": true
                },
                {
                  "name": "repo",
                  "type": "string",
                  "location": "Path",
                  "required": true
                },
                {
                  "name": "path",
                  "type": "string",
                  "location": "Path",
                  "required": true
                },
                {
                  "name": "ref",
                  "type": "string",
                  "location": "Query",
                  "required": true,
                  "default": "master"
                }
              ],
              "responses": [
                {
                  "code": {
                    "integer": {
                      "value": 200
                    }
                  },
                  "type": "contents"
                },
                {
                  "code": {
                    "integer": {
                      "value": 401
                    }
                  },
                  "type": "unit"
                },
                {
                  "code": {
                    "integer": {
                      "value": 404
                    }
                  },
                  "type": "unit"
                }
              ],
              "attributes": []
            }
          ],
          "attributes": [],
          "path": "/repos/:owner/:repo"
        },
        {
          "type": "hook",
          "plural": "hooks",
          "operations": [
            {
              "method": "GET",
              "path": "/repos/:owner/:repo/hooks",
              "parameters": [
                {
                  "name": "owner",
                  "type": "string",
                  "location": "Path",
                  "required": true
                },
                {
                  "name": "repo",
                  "type": "string",
                  "location": "Path",
                  "required": true
                }
              ],
              "responses": [
                {
                  "code": {
                    "integer": {
                      "value": 200
                    }
                  },
                  "type": "[hook]"
                },
                {
                  "code": {
                    "integer": {
                      "value": 404
                    }
                  },
                  "type": "unit"
                }
              ],
              "attributes": []
            },
            {
              "method": "GET",
              "path": "/repos/:owner/:repo/hooks/:id",
              "parameters": [
                {
                  "name": "owner",
                  "type": "string",
                  "location": "Path",
                  "required": true
                },
                {
                  "name": "repo",
                  "type": "string",
                  "location": "Path",
                  "required": true
                },
                {
                  "name": "id",
                  "type": "long",
                  "location": "Path",
                  "required": true
                }
              ],
              "responses": [
                {
                  "code": {
                    "integer": {
                      "value": 200
                    }
                  },
                  "type": "hook"
                },
                {
                  "code": {
                    "integer": {
                      "value": 404
                    }
                  },
                  "type": "unit"
                }
              ],
              "attributes": []
            },
            {
              "method": "POST",
              "path": "/repos/:owner/:repo/hooks",
              "parameters": [
                {
                  "name": "owner",
                  "type": "string",
                  "location": "Path",
                  "required": true
                },
                {
                  "name": "repo",
                  "type": "string",
                  "location": "Path",
                  "required": true
                },
                {
                  "name": "name",
                  "type": "string",
                  "location": "Form",
                  "required": true,
                  "example": "web"
                },
                {
                  "name": "config",
                  "type": "hook_config",
                  "location": "Form",
                  "required": true
                },
                {
                  "name": "events",
                  "type": "[hook_event]",
                  "location": "Form",
                  "required": true
                },
                {
                  "name": "active",
                  "type": "boolean",
                  "location": "Form",
                  "required": true
                }
              ],
              "responses": [
                {
                  "code": {
                    "integer": {
                      "value": 201
                    }
                  },
                  "type": "hook"
                },
                {
                  "code": {
                    "integer": {
                      "value": 404
                    }
                  },
                  "type": "unit"
                },
                {
                  "code": {
                    "integer": {
                      "value": 422
                    }
                  },
                  "type": "unprocessable_entity"
                }
              ],
              "attributes": []
            },
            {
              "method": "DELETE",
              "path": "/repos/:owner/:repo/hooks/:id",
              "parameters": [
                {
                  "name": "owner",
                  "type": "string",
                  "location": "Path",
                  "required": true
                },
                {
                  "name": "repo",
                  "type": "string",
                  "location": "Path",
                  "required": true
                },
                {
                  "name": "id",
                  "type": "long",
                  "location": "Path",
                  "required": true
                }
              ],
              "responses": [
                {
                  "code": {
                    "integer": {
                      "value": 204
                    }
                  },
                  "type": "unit"
                },
                {
                  "code": {
                    "integer": {
                      "value": 404
                    }
                  },
                  "type": "unit"
                }
              ],
              "attributes": []
            }
          ],
          "attributes": [],
          "path": "/repos/:owner/:repo/hooks"
        },
        {
          "type": "pull_request",
          "plural": "pull_requests",
          "operations": [
            {
              "method": "POST",
              "path": "/repos/:owner/:repo/pulls",
              "parameters": [
                {
                  "name": "owner",
                  "type": "string",
                  "location": "Path",
                  "required": true
                },
                {
                  "name": "repo",
                  "type": "string",
                  "location": "Path",
                  "required": true
                }
              ],
              "responses": [
                {
                  "code": {
                    "integer": {
                      "value": 201
                    }
                  },
                  "type": "pull_request"
                },
                {
                  "code": {
                    "integer": {
                      "value": 404
                    }
                  },
                  "type": "unit"
                },
                {
                  "code": {
                    "integer": {
                      "value": 422
                    }
                  },
                  "type": "unprocessable_entity"
                }
              ],
              "attributes": [],
              "body": {
                "type": "pull_request_form",
                "attributes": []
              }
            }
          ],
          "attributes": [],
          "path": "/repos/:owner/:repo/pulls"
        },
        {
          "type": "ref",
          "plural": "refs",
          "operations": [
            {
              "method": "GET",
              "path": "/repos/:owner/:repo/git/refs",
              "parameters": [
                {
                  "name": "owner",
                  "type": "string",
                  "location": "Path",
                  "required": true
                },
                {
                  "name": "repo",
                  "type": "string",
                  "location": "Path",
                  "required": true
                }
              ],
              "responses": [
                {
                  "code": {
                    "integer": {
                      "value": 200
                    }
                  },
                  "type": "[ref]"
                },
                {
                  "code": {
                    "integer": {
                      "value": 404
                    }
                  },
                  "type": "unit"
                }
              ],
              "attributes": []
            },
            {
              "method": "GET",
              "path": "/repos/:owner/:repo/git/refs/:ref",
              "parameters": [
                {
                  "name": "owner",
                  "type": "string",
                  "location": "Path",
                  "required": true
                },
                {
                  "name": "repo",
                  "type": "string",
                  "location": "Path",
                  "required": true
                },
                {
                  "name": "ref",
                  "type": "string",
                  "location": "Path",
                  "required": true
                }
              ],
              "responses": [
                {
                  "code": {
                    "integer": {
                      "value": 200
                    }
                  },
                  "type": "ref"
                },
                {
                  "code": {
                    "integer": {
                      "value": 404
                    }
                  },
                  "type": "unit"
                }
              ],
              "attributes": []
            },
            {
              "method": "POST",
              "path": "/repos/:owner/:repo/git/refs",
              "parameters": [
                {
                  "name": "owner",
                  "type": "string",
                  "location": "Path",
                  "required": true
                },
                {
                  "name": "repo",
                  "type": "string",
                  "location": "Path",
                  "required": true
                }
              ],
              "responses": [
                {
                  "code": {
                    "integer": {
                      "value": 201
                    }
                  },
                  "type": "ref"
                },
                {
                  "code": {
                    "integer": {
                      "value": 404
                    }
                  },
                  "type": "unit"
                },
                {
                  "code": {
                    "integer": {
                      "value": 422
                    }
                  },
                  "type": "unprocessable_entity"
                }
              ],
              "attributes": [],
              "body": {
                "type": "ref_form",
                "attributes": []
              }
            },
            {
              "method": "PUT",
              "path": "/repos/:owner/:repo/git/refs/:ref",
              "parameters": [
                {
                  "name": "owner",
                  "type": "string",
                  "location": "Path",
                  "required": true
                },
                {
                  "name": "repo",
                  "type": "string",
                  "location": "Path",
                  "required": true
                },
                {
                  "name": "ref",
                  "type": "string",
                  "location": "Path",
                  "required": true
                }
              ],
              "responses": [
                {
                  "code": {
                    "integer": {
                      "value": 201
                    }
                  },
                  "type": "ref"
                },
                {
                  "code": {
                    "integer": {
                      "value": 404
                    }
                  },
                  "type": "unit"
                },
                {
                  "code": {
                    "integer": {
                      "value": 422
                    }
                  },
                  "type": "unprocessable_entity"
                }
              ],
              "attributes": [],
              "body": {
                "type": "ref_update_form",
                "attributes": []
              }
            }
          ],
          "attributes": [],
          "path": "/repos/:owner/:repo/git/refs"
        },
        {
          "type": "repository",
          "plural": "repositories",
          "operations": [
            {
              "method": "GET",
              "path": "/user/repos",
              "parameters": [
                {
                  "name": "page",
                  "type": "long",
                  "location": "Query",
                  "required": true,
                  "default": "1"
                },
                {
                  "name": "visibility",
                  "type": "visibility",
                  "location": "Query",
                  "required": true,
                  "default": "all"
                },
                {
                  "name": "affiliation",
                  "type": "string",
                  "location": "Query",
                  "required": false
                },
                {
                  "name": "type",
                  "type": "string",
                  "location": "Query",
                  "required": false
                },
                {
                  "name": "sort",
                  "type": "string",
                  "location": "Query",
                  "required": true,
                  "default": "full_name"
                },
                {
                  "name": "direction",
                  "type": "string",
                  "location": "Query",
                  "required": true,
                  "default": "asc"
                }
              ],
              "responses": [
                {
                  "code": {
                    "integer": {
                      "value": 200
                    }
                  },
                  "type": "[repository]"
                },
                {
                  "code": {
                    "integer": {
                      "value": 401
                    }
                  },
                  "type": "unit"
                }
              ],
              "attributes": []
            },
            {
              "method": "GET",
              "path": "/users/:username/repos",
              "parameters": [
                {
                  "name": "username",
                  "type": "string",
                  "location": "Path",
                  "required": true
                },
                {
                  "name": "page",
                  "type": "long",
                  "location": "Query",
                  "required": true,
                  "default": "1"
                },
                {
                  "name": "type",
                  "type": "string",
                  "location": "Query",
                  "required": true,
                  "default": "owner"
                },
                {
                  "name": "sort",
                  "type": "string",
                  "location": "Query",
                  "required": true,
                  "default": "full_name"
                },
                {
                  "name": "direction",
                  "type": "string",
                  "location": "Query",
                  "required": true,
                  "default": "asc"
                }
              ],
              "responses": [
                {
                  "code": {
                    "integer": {
                      "value": 200
                    }
                  },
                  "type": "[repository]"
                },
                {
                  "code": {
                    "integer": {
                      "value": 401
                    }
                  },
                  "type": "unit"
                }
              ],
              "attributes": [],
              "description": "List public repositories for the specified user."
            },
            {
              "method": "GET",
              "path": "/orgs/:org/repos",
              "parameters": [
                {
                  "name": "org",
                  "type": "string",
                  "location": "Path",
                  "required": true
                },
                {
                  "name": "page",
                  "type": "long",
                  "location": "Query",
                  "required": true,
                  "default": "1"
                },
                {
                  "name": "type",
                  "type": "string",
                  "location": "Query",
                  "required": true,
                  "default": "all"
                },
                {
                  "name": "sort",
                  "type": "string",
                  "location": "Query",
                  "required": true,
                  "default": "full_name"
                },
                {
                  "name": "direction",
                  "type": "string",
                  "location": "Query",
                  "required": true,
                  "default": "asc"
                }
              ],
              "responses": [
                {
                  "code": {
                    "integer": {
                      "value": 200
                    }
                  },
                  "type": "[repository]"
                },
                {
                  "code": {
                    "integer": {
                      "value": 401
                    }
                  },
                  "type": "unit"
                }
              ],
              "attributes": [],
              "description": "List repositories for the specified org."
            }
          ],
          "attributes": [],
          "path": ""
        },
        {
          "type": "tag",
          "plural": "tags",
          "operations": [
            {
              "method": "GET",
              "path": "/repos/:owner/:repo/tags",
              "parameters": [
                {
                  "name": "owner",
                  "type": "string",
                  "location": "Path",
                  "required": true
                },
                {
                  "name": "repo",
                  "type": "string",
                  "location": "Path",
                  "required": true
                }
              ],
              "responses": [
                {
                  "code": {
                    "integer": {
                      "value": 200
                    }
                  },
                  "type": "[tag_summary]"
                },
                {
                  "code": {
                    "integer": {
                      "value": 404
                    }
                  },
                  "type": "unit"
                }
              ],
              "attributes": []
            },
            {
              "method": "GET",
              "path": "/repos/:owner/:repo/tags/:sha",
              "parameters": [
                {
                  "name": "owner",
                  "type": "string",
                  "location": "Path",
                  "required": true
                },
                {
                  "name": "repo",
                  "type": "string",
                  "location": "Path",
                  "required": true
                },
                {
                  "name": "sha",
                  "type": "string",
                  "location": "Path",
                  "required": true
                }
              ],
              "responses": [
                {
                  "code": {
                    "integer": {
                      "value": 200
                    }
                  },
                  "type": "tag"
                },
                {
                  "code": {
                    "integer": {
                      "value": 404
                    }
                  },
                  "type": "unit"
                }
              ],
              "attributes": []
            },
            {
              "method": "POST",
              "path": "/repos/:owner/:repo/git/tags",
              "parameters": [
                {
                  "name": "owner",
                  "type": "string",
                  "location": "Path",
                  "required": true
                },
                {
                  "name": "repo",
                  "type": "string",
                  "location": "Path",
                  "required": true
                }
              ],
              "responses": [
                {
                  "code": {
                    "integer": {
                      "value": 201
                    }
                  },
                  "type": "tag"
                },
                {
                  "code": {
                    "integer": {
                      "value": 404
                    }
                  },
                  "type": "unit"
                },
                {
                  "code": {
                    "integer": {
                      "value": 422
                    }
                  },
                  "type": "unprocessable_entity"
                }
              ],
              "attributes": [],
              "body": {
                "type": "tag_form",
                "attributes": []
              }
            }
          ],
          "attributes": [],
          "path": "/repos/:owner/:repo"
        },
        {
          "type": "tree",
          "plural": "trees",
          "operations": [
            {
              "method": "POST",
              "path": "/repos/:owner/:repo/git/trees",
              "parameters": [
                {
                  "name": "owner",
                  "type": "string",
                  "location": "Path",
                  "required": true
                },
                {
                  "name": "repo",
                  "type": "string",
                  "location": "Path",
                  "required": true
                }
              ],
              "responses": [
                {
                  "code": {
                    "integer": {
                      "value": 201
                    }
                  },
                  "type": "create_tree_response"
                },
                {
                  "code": {
                    "integer": {
                      "value": 404
                    }
                  },
                  "type": "unit"
                },
                {
                  "code": {
                    "integer": {
                      "value": 422
                    }
                  },
                  "type": "unprocessable_entity"
                }
              ],
              "attributes": [],
              "body": {
                "type": "create_tree_form",
                "attributes": []
              }
            }
          ],
          "attributes": [],
          "path": "/repos/:owner/:repo/git/trees"
        },
        {
          "type": "user",
          "plural": "users",
          "operations": [
            {
              "method": "GET",
              "path": "/user",
              "parameters": [],
              "responses": [
                {
                  "code": {
                    "integer": {
                      "value": 200
                    }
                  },
                  "type": "user"
                },
                {
                  "code": {
                    "integer": {
                      "value": 401
                    }
                  },
                  "type": "unit"
                }
              ],
              "attributes": []
            }
          ],
          "attributes": [],
          "path": ""
        },
        {
          "type": "user_email",
          "plural": "user_emails",
          "operations": [
            {
              "method": "GET",
              "path": "/user/emails",
              "parameters": [],
              "responses": [
                {
                  "code": {
                    "integer": {
                      "value": 200
                    }
                  },
                  "type": "[user_email]"
                },
                {
                  "code": {
                    "integer": {
                      "value": 401
                    }
                  },
                  "type": "unit"
                }
              ],
              "attributes": []
            }
          ],
          "attributes": [],
          "path": "/user/emails"
        }
      ],
      "attributes": [],
      "annotations": [],
      "base_url": "https://api.github.com",
      "description": "See https://developer.github.com/v3/"
    },
    {
      "apidoc": {
        "version": "0.15.4"
      },
      "name": "delta-config",
      "organization": {
        "key": "flow"
      },
      "application": {
        "key": "delta-config"
      },
      "namespace": "io.flow.delta.config.v0",
      "version": "0.8.36",
      "info": {},
      "headers": [],
      "imports": [],
      "enums": [
        {
          "name": "build_stage",
          "plural": "build_stages",
          "values": [
            {
              "name": "set_desired_state",
              "attributes": []
            },
            {
              "name": "sync_docker_image",
              "attributes": []
            },
            {
              "name": "build_docker_image",
              "attributes": []
            },
            {
              "name": "scale",
              "attributes": []
            }
          ],
          "attributes": [],
          "description": "Represents the individual stages of the continuous delivery system that can be enabled / disabled at the build level"
        },
        {
          "name": "cluster",
          "plural": "clusters",
          "values": [
            {
              "name": "ecs",
              "attributes": []
            },
            {
              "name": "k8s",
              "attributes": []
            }
          ],
          "attributes": []
        },
        {
          "name": "instance_type",
          "plural": "instance_types",
          "values": [
            {
              "name": "c4.large",
              "attributes": []
            },
            {
              "name": "c4.xlarge",
              "attributes": []
            },
            {
              "name": "c4.2xlarge",
              "attributes": []
            },
            {
              "name": "m4.large",
              "attributes": []
            },
            {
              "name": "m4.xlarge",
              "attributes": []
            },
            {
              "name": "m4.2xlarge",
              "attributes": []
            },
            {
              "name": "m5.large",
              "attributes": []
            },
            {
              "name": "m5.xlarge",
              "attributes": []
            },
            {
              "name": "m5.2xlarge",
              "attributes": []
            },
            {
              "name": "m5.4xlarge",
              "attributes": []
            },
            {
              "name": "c5.large",
              "attributes": []
            },
            {
              "name": "c5.xlarge",
              "attributes": []
            },
            {
              "name": "c5.2xlarge",
              "attributes": []
            },
            {
              "name": "t2.micro",
              "attributes": []
            },
            {
              "name": "t2.small",
              "attributes": []
            },
            {
              "name": "t2.medium",
              "attributes": []
            },
            {
              "name": "t2.large",
              "attributes": []
            },
            {
              "name": "t3.micro",
              "attributes": []
            },
            {
              "name": "t3.small",
              "attributes": []
            },
            {
              "name": "t3.medium",
              "attributes": []
            },
            {
              "name": "t3.large",
              "attributes": []
            },
            {
              "name": "t3.xlarge",
              "attributes": []
            }
          ],
          "attributes": [],
          "description": "List of supported AWS instance types - see https://aws.amazon.com/ec2/instance-types/"
        },
        {
          "name": "project_stage",
          "plural": "project_stages",
          "values": [
            {
              "name": "sync_shas",
              "attributes": []
            },
            {
              "name": "sync_tags",
              "attributes": []
            },
            {
              "name": "tag",
              "attributes": []
            }
          ],
          "attributes": [],
          "description": "Represents the individual stages of the continuous delivery system that can be enabled / disabled at the project level"
        }
      ],
      "interfaces": [],
      "unions": [
        {
          "name": "build_config",
          "plural": "build_configs",
          "types": [
            {
              "type": "ecs_build_config",
              "attributes": [],
              "default": true,
              "discriminator_value": "ecs"
            },
            {
              "type": "k8s_build_config",
              "attributes": [],
              "discriminator_value": "k8s"
            }
          ],
          "attributes": [],
          "interfaces": [],
          "discriminator": "discriminator"
        },
        {
          "name": "config",
          "plural": "configs",
          "types": [
            {
              "type": "config_project",
              "attributes": [],
              "discriminator_value": "config_project"
            },
            {
              "type": "config_error",
              "attributes": [],
              "discriminator_value": "config_error"
            }
          ],
          "attributes": [],
          "interfaces": [],
          "discriminator": "discriminator"
        }
      ],
      "models": [
        {
          "name": "branch",
          "plural": "branches",
          "fields": [
            {
              "name": "name",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": [],
              "example": "master"
            }
          ],
          "attributes": [],
          "interfaces": [],
          "description": "The name of the branch that we are actively monitoring, including any information needed for the initial deploy."
        },
        {
          "name": "config_error",
          "plural": "config_errors",
          "fields": [
            {
              "name": "errors",
              "type": "[string]",
              "required": true,
              "attributes": [],
              "annotations": [],
              "minimum": 1
            }
          ],
          "attributes": [],
          "interfaces": [],
          "description": "Used to indicate that there was a problem parsing the project configuration"
        },
        {
          "name": "config_project",
          "plural": "config_projects",
          "fields": [
            {
              "name": "stages",
              "type": "[project_stage]",
              "required": true,
              "attributes": [],
              "annotations": [],
              "minimum": 0
            },
            {
              "name": "builds",
              "type": "[build_config]",
              "required": true,
              "attributes": [],
              "annotations": [],
              "minimum": 1
            },
            {
              "name": "branches",
              "type": "[branch]",
              "required": true,
              "attributes": [],
              "annotations": [],
              "minimum": 1
            }
          ],
          "attributes": [],
          "interfaces": [],
          "description": "Top level configuration for a project, including what builds and branches are covered and the current status (e.g. enabled, paused, etc.)"
        },
        {
          "name": "ecs_build_config",
          "plural": "ecs_build_configs",
          "fields": [
            {
              "name": "name",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": [],
              "example": "root, api, or www"
            },
            {
              "name": "cluster",
              "type": "cluster",
              "required": false,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "dockerfile",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "initial_number_instances",
              "type": "long",
              "required": true,
              "attributes": [],
              "annotations": [],
              "description": "When first deploying this branch, the number of instances we create"
            },
            {
              "name": "instance_type",
              "type": "instance_type",
              "required": true,
              "attributes": [],
              "annotations": []
            },
            {
              "name": "memory",
              "type": "long",
              "required": false,
              "attributes": [],
              "annotations": [],
              "description": "The number of MiB of memory to set for jvm xmx"
            },
            {
              "name": "container_memory",
              "type": "long",
              "required": false,
              "attributes": [],
              "annotations": [],
              "description": "The number of MiB of memory to set for container memory. This must be at least the jvm number PLUS stack and native memory PLUS any sidecars"
            },
            {
              "name": "port_container",
              "type": "integer",
              "required": true,
              "attributes": [],
              "annotations": [],
              "description": "The port number on the container that is bound to the user-specified or automatically assigned host port."
            },
            {
              "name": "port_host",
              "type": "integer",
              "required": true,
              "attributes": [],
              "annotations": [],
              "description": "The port number on the container instance to reserve for your container"
            },
            {
              "name": "remote_logging",
              "type": "boolean",
              "required": false,
              "attributes": [],
              "annotations": [],
              "description": "Flag whether this build should send logs to a remote location. e.g. Sumo Logic"
            },
            {
              "name": "stages",
              "type": "[build_stage]",
              "required": true,
              "attributes": [],
              "annotations": [],
              "minimum": 0
            },
            {
              "name": "dependencies",
              "type": "[string]",
              "required": true,
              "attributes": [],
              "annotations": [],
              "description": "The names of other builds that this one is dependent on. If specified, we will ensure that we never scale this build to a tag that is ahead of the minimum version of the dependent application running in production.",
              "minimum": 0,
              "example": "www"
            },
            {
              "name": "version",
              "type": "string",
              "required": false,
              "attributes": [],
              "annotations": [],
              "description": "The version of Delta to use for deployments. Defaults to 1.0 if not specified",
              "example": "1.0"
            },
            {
              "name": "healthcheck_url",
              "type": "string",
              "required": false,
              "attributes": [],
              "annotations": [],
              "description": "The URL used for healthchecks by the ELB",
              "example": "/_internal_/healthcheck"
            },
            {
              "name": "cross_zone_load_balancing",
              "type": "boolean",
              "required": false,
              "attributes": [],
              "annotations": [],
              "description": "Flag whether this build should enable CrossZoneLoadBalancing"
            },
            {
              "name": "allow_downtime",
              "type": "boolean",
              "required": false,
              "attributes": [],
              "annotations": [],
              "description": "Allows Delta to optimize infrastructure for services that can accept downtime deployments. Defaults to false."
            }
          ],
          "attributes": [],
          "interfaces": []
        },
        {
          "name": "k8s_build_config",
          "plural": "k8s_build_configs",
          "fields": [
            {
              "name": "name",
              "type": "string",
              "required": true,
              "attributes": [],
              "annotations": [],
              "example": "root, api, or www"
            },
            {
              "name": "cluster",
              "type": "cluster",
              "required": true,
              "attributes": [],
              "annotations": []
            }
          ],
          "attributes": [],
          "interfaces": []
        }
      ],
      "resources": [],
      "attributes": [],
      "annotations": []
    }
  ]
}
